

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Aug 14 23:10:51 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  010F                     	;# 
   431  018C                     	;# 
   432  018D                     	;# 
   433                           
   434                           	psect	idataCOMMON
   435  07FE                     __pidataCOMMON:	
   436                           
   437                           ;initializer for read_matrix_keypad@once
   438  07FE  3401               	retlw	1
   439  0008                     _PORTD	set	8
   440  0061                     _TMR2IF	set	97
   441  0091                     _T2CKPS1	set	145
   442  0090                     _T2CKPS0	set	144
   443  0032                     _RB2	set	50
   444  0031                     _RB1	set	49
   445  0030                     _RB0	set	48
   446  0040                     _RD0	set	64
   447  0041                     _RD1	set	65
   448  0042                     _RD2	set	66
   449  0043                     _RD3	set	67
   450  0049                     _RE1	set	73
   451  004A                     _RE2	set	74
   452  0033                     _RB3	set	51
   453  0092                     _TMR2ON	set	146
   454  005F                     _GIE	set	95
   455  005E                     _PEIE	set	94
   456  003A                     _RC2	set	58
   457  0039                     _RC1	set	57
   458  0092                     _PR2	set	146
   459  0086                     _TRISB	set	134
   460  0088                     _TRISD	set	136
   461  0461                     _TMR2IE	set	1121
   462  040F                     _nRBPU	set	1039
   463  0449                     _TRISE1	set	1097
   464  044A                     _TRISE2	set	1098
   465  043A                     _TRISC2	set	1082
   466  0439                     _TRISC1	set	1081
   467                           
   468                           	psect	strings
   469  0800                     __pstrings:	
   470  0800                     stringtab:	
   471  0800                     __stringtab:	
   472                           
   473                           ;	String table - string pointers are 2 bytes each
   474  0800  1BFF               	btfsc	btemp+1,7
   475  0801  280A               	ljmp	stringcode
   476  0802  1383               	bcf	3,7
   477  0803  187F               	btfsc	btemp+1,0
   478  0804  1783               	bsf	3,7
   479  0805  0800               	movf	0,w
   480  0806  0A84               	incf	4,f
   481  0807  1903               	skipnz
   482  0808  0AFF               	incf	btemp+1,f
   483  0809  0008               	return
   484  080A                     stringcode:	
   485  080A  087F               	movf	btemp+1,w
   486  080B  397F               	andlw	127
   487  080C  008A               	movwf	10
   488  080D  0804               	movf	4,w
   489  080E  0A84               	incf	4,f
   490  080F  1903               	skipnz
   491  0810  0AFF               	incf	btemp+1,f
   492  0811  0082               	movwf	2
   493  0812                     __stringbase:	
   494  0812                     __end_of__stringtab:	
   495                           
   496                           	psect	stringtext
   497  0400                     __pstringtext:	
   498  0400                     STR_19:	
   499  0400  3420               	retlw	32	;' '
   500  0401  3436               	retlw	54	;'6'
   501  0402  342E               	retlw	46	;'.'
   502  0403  3453               	retlw	83	;'S'
   503  0404  3474               	retlw	116	;'t'
   504  0405  346F               	retlw	111	;'o'
   505  0406  3470               	retlw	112	;'p'
   506  0407  3420               	retlw	32	;' '
   507  0408  3420               	retlw	32	;' '
   508  0409  3420               	retlw	32	;' '
   509  040A  3420               	retlw	32	;' '
   510  040B  3420               	retlw	32	;' '
   511  040C  3420               	retlw	32	;' '
   512  040D  3420               	retlw	32	;' '
   513  040E  3420               	retlw	32	;' '
   514  040F  3420               	retlw	32	;' '
   515  0410  3420               	retlw	32	;' '
   516  0411  3420               	retlw	32	;' '
   517  0412  3420               	retlw	32	;' '
   518  0413  3420               	retlw	32	;' '
   519  0414  3420               	retlw	32	;' '
   520  0415  3400               	retlw	0
   521  0416                     STR_18:	
   522  0416  3420               	retlw	32	;' '
   523  0417  3435               	retlw	53	;'5'
   524  0418  342E               	retlw	46	;'.'
   525  0419  3450               	retlw	80	;'P'
   526  041A  3461               	retlw	97	;'a'
   527  041B  3475               	retlw	117	;'u'
   528  041C  3473               	retlw	115	;'s'
   529  041D  3465               	retlw	101	;'e'
   530  041E  3420               	retlw	32	;' '
   531  041F  3420               	retlw	32	;' '
   532  0420  3420               	retlw	32	;' '
   533  0421  3420               	retlw	32	;' '
   534  0422  3420               	retlw	32	;' '
   535  0423  3420               	retlw	32	;' '
   536  0424  3420               	retlw	32	;' '
   537  0425  3420               	retlw	32	;' '
   538  0426  3420               	retlw	32	;' '
   539  0427  3420               	retlw	32	;' '
   540  0428  3420               	retlw	32	;' '
   541  0429  3420               	retlw	32	;' '
   542  042A  3420               	retlw	32	;' '
   543  042B  3400               	retlw	0
   544  042C                     STR_17:	
   545  042C  3420               	retlw	32	;' '
   546  042D  3434               	retlw	52	;'4'
   547  042E  342E               	retlw	46	;'.'
   548  042F  3453               	retlw	83	;'S'
   549  0430  3474               	retlw	116	;'t'
   550  0431  3461               	retlw	97	;'a'
   551  0432  3472               	retlw	114	;'r'
   552  0433  3474               	retlw	116	;'t'
   553  0434  342F               	retlw	47	;'/'
   554  0435  3452               	retlw	82	;'R'
   555  0436  3465               	retlw	101	;'e'
   556  0437  3473               	retlw	115	;'s'
   557  0438  3475               	retlw	117	;'u'
   558  0439  346D               	retlw	109	;'m'
   559  043A  3465               	retlw	101	;'e'
   560  043B  3420               	retlw	32	;' '
   561  043C  3420               	retlw	32	;' '
   562  043D  3420               	retlw	32	;' '
   563  043E  3420               	retlw	32	;' '
   564  043F  3420               	retlw	32	;' '
   565  0440  3420               	retlw	32	;' '
   566  0441  3400               	retlw	0
   567  0442                     STR_8:	
   568  0442  3453               	retlw	83	;'S'
   569  0443  3445               	retlw	69	;'E'
   570  0444  3454               	retlw	84	;'T'
   571  0445  3420               	retlw	32	;' '
   572  0446  3454               	retlw	84	;'T'
   573  0447  3449               	retlw	73	;'I'
   574  0448  344D               	retlw	77	;'M'
   575  0449  3445               	retlw	69	;'E'
   576  044A  3420               	retlw	32	;' '
   577  044B  343C               	retlw	60	;'<'
   578  044C  344D               	retlw	77	;'M'
   579  044D  344D               	retlw	77	;'M'
   580  044E  343A               	retlw	58	;':'
   581  044F  3453               	retlw	83	;'S'
   582  0450  3453               	retlw	83	;'S'
   583  0451  343E               	retlw	62	;'>'
   584  0452  3400               	retlw	0
   585  0453                     STR_10:	
   586  0453  342A               	retlw	42	;'*'
   587  0454  343A               	retlw	58	;':'
   588  0455  3443               	retlw	67	;'C'
   589  0456  344C               	retlw	76	;'L'
   590  0457  3445               	retlw	69	;'E'
   591  0458  3441               	retlw	65	;'A'
   592  0459  3452               	retlw	82	;'R'
   593  045A  3420               	retlw	32	;' '
   594  045B  3420               	retlw	32	;' '
   595  045C  3423               	retlw	35	;'#'
   596  045D  343A               	retlw	58	;':'
   597  045E  3445               	retlw	69	;'E'
   598  045F  344E               	retlw	78	;'N'
   599  0460  3454               	retlw	84	;'T'
   600  0461  3445               	retlw	69	;'E'
   601  0462  3452               	retlw	82	;'R'
   602  0463  3400               	retlw	0
   603  0464                     STR_20:	
   604  0464  3443               	retlw	67	;'C'
   605  0465  344F               	retlw	79	;'O'
   606  0466  344F               	retlw	79	;'O'
   607  0467  344B               	retlw	75	;'K'
   608  0468  3449               	retlw	73	;'I'
   609  0469  344E               	retlw	78	;'N'
   610  046A  3447               	retlw	71	;'G'
   611  046B  3420               	retlw	32	;' '
   612  046C  3454               	retlw	84	;'T'
   613  046D  3449               	retlw	73	;'I'
   614  046E  344D               	retlw	77	;'M'
   615  046F  3445               	retlw	69	;'E'
   616  0470  3420               	retlw	32	;' '
   617  0471  3455               	retlw	85	;'U'
   618  0472  3450               	retlw	80	;'P'
   619  0473  3400               	retlw	0
   620  0474                     STR_3:	
   621  0474  344D               	retlw	77	;'M'
   622  0475  3469               	retlw	105	;'i'
   623  0476  3463               	retlw	99	;'c'
   624  0477  3472               	retlw	114	;'r'
   625  0478  346F               	retlw	111	;'o'
   626  0479  3477               	retlw	119	;'w'
   627  047A  3461               	retlw	97	;'a'
   628  047B  3476               	retlw	118	;'v'
   629  047C  3465               	retlw	101	;'e'
   630  047D  3420               	retlw	32	;' '
   631  047E  344F               	retlw	79	;'O'
   632  047F  3476               	retlw	118	;'v'
   633  0480  3465               	retlw	101	;'e'
   634  0481  346E               	retlw	110	;'n'
   635  0482  3400               	retlw	0
   636  0483                     STR_6:	
   637  0483  3433               	retlw	51	;'3'
   638  0484  342E               	retlw	46	;'.'
   639  0485  3420               	retlw	32	;' '
   640  0486  3443               	retlw	67	;'C'
   641  0487  346F               	retlw	111	;'o'
   642  0488  346E               	retlw	110	;'n'
   643  0489  3476               	retlw	118	;'v'
   644  048A  3465               	retlw	101	;'e'
   645  048B  3463               	retlw	99	;'c'
   646  048C  3474               	retlw	116	;'t'
   647  048D  3469               	retlw	105	;'i'
   648  048E  346F               	retlw	111	;'o'
   649  048F  346E               	retlw	110	;'n'
   650  0490  3400               	retlw	0
   651  0491                     STR_1:	
   652  0491  3450               	retlw	80	;'P'
   653  0492  346F               	retlw	111	;'o'
   654  0493  3477               	retlw	119	;'w'
   655  0494  3465               	retlw	101	;'e'
   656  0495  3472               	retlw	114	;'r'
   657  0496  3420               	retlw	32	;' '
   658  0497  343D               	retlw	61	;'='
   659  0498  3420               	retlw	32	;' '
   660  0499  3439               	retlw	57	;'9'
   661  049A  3430               	retlw	48	;'0'
   662  049B  3430               	retlw	48	;'0'
   663  049C  3457               	retlw	87	;'W'
   664  049D  3400               	retlw	0
   665  049E                     STR_14:	
   666  049E  3450               	retlw	80	;'P'
   667  049F  346C               	retlw	108	;'l'
   668  04A0  3465               	retlw	101	;'e'
   669  04A1  3461               	retlw	97	;'a'
   670  04A2  3473               	retlw	115	;'s'
   671  04A3  3465               	retlw	101	;'e'
   672  04A4  3420               	retlw	32	;' '
   673  04A5  3463               	retlw	99	;'c'
   674  04A6  346C               	retlw	108	;'l'
   675  04A7  346F               	retlw	111	;'o'
   676  04A8  3473               	retlw	115	;'s'
   677  04A9  3465               	retlw	101	;'e'
   678  04AA  3400               	retlw	0
   679  04AB                     STR_9:	
   680  04AB  3454               	retlw	84	;'T'
   681  04AC  3449               	retlw	73	;'I'
   682  04AD  344D               	retlw	77	;'M'
   683  04AE  3445               	retlw	69	;'E'
   684  04AF  342D               	retlw	45	;'-'
   685  04B0  3420               	retlw	32	;' '
   686  04B1  3430               	retlw	48	;'0'
   687  04B2  3430               	retlw	48	;'0'
   688  04B3  343A               	retlw	58	;':'
   689  04B4  3430               	retlw	48	;'0'
   690  04B5  3430               	retlw	48	;'0'
   691  04B6  3400               	retlw	0
   692  04B7                     STR_2:	
   693  04B7  3450               	retlw	80	;'P'
   694  04B8  346F               	retlw	111	;'o'
   695  04B9  3477               	retlw	119	;'w'
   696  04BA  3465               	retlw	101	;'e'
   697  04BB  3472               	retlw	114	;'r'
   698  04BC  3469               	retlw	105	;'i'
   699  04BD  346E               	retlw	110	;'n'
   700  04BE  3467               	retlw	103	;'g'
   701  04BF  3420               	retlw	32	;' '
   702  04C0  344F               	retlw	79	;'O'
   703  04C1  344E               	retlw	78	;'N'
   704  04C2  3400               	retlw	0
   705  04C3                     STR_15:	
   706  04C3  3454               	retlw	84	;'T'
   707  04C4  3449               	retlw	73	;'I'
   708  04C5  344D               	retlw	77	;'M'
   709  04C6  3445               	retlw	69	;'E'
   710  04C7  3420               	retlw	32	;' '
   711  04C8  343D               	retlw	61	;'='
   712  04C9  3420               	retlw	32	;' '
   713  04CA  3420               	retlw	32	;' '
   714  04CB  3420               	retlw	32	;' '
   715  04CC  3400               	retlw	0
   716  04CD                     STR_13:	
   717  04CD  3444               	retlw	68	;'D'
   718  04CE  346F               	retlw	111	;'o'
   719  04CF  346F               	retlw	111	;'o'
   720  04D0  3472               	retlw	114	;'r'
   721  04D1  3420               	retlw	32	;' '
   722  04D2  344F               	retlw	79	;'O'
   723  04D3  3470               	retlw	112	;'p'
   724  04D4  3465               	retlw	101	;'e'
   725  04D5  346E               	retlw	110	;'n'
   726  04D6  3400               	retlw	0
   727  04D7                     STR_5:	
   728  04D7  3432               	retlw	50	;'2'
   729  04D8  342E               	retlw	46	;'.'
   730  04D9  3420               	retlw	32	;' '
   731  04DA  3447               	retlw	71	;'G'
   732  04DB  3472               	retlw	114	;'r'
   733  04DC  3469               	retlw	105	;'i'
   734  04DD  346C               	retlw	108	;'l'
   735  04DE  346C               	retlw	108	;'l'
   736  04DF  3400               	retlw	0
   737  04E0                     STR_4:	
   738  04E0  3431               	retlw	49	;'1'
   739  04E1  342E               	retlw	46	;'.'
   740  04E2  3420               	retlw	32	;' '
   741  04E3  344D               	retlw	77	;'M'
   742  04E4  3469               	retlw	105	;'i'
   743  04E5  3463               	retlw	99	;'c'
   744  04E6  3472               	retlw	114	;'r'
   745  04E7  346F               	retlw	111	;'o'
   746  04E8  3400               	retlw	0
   747  04E9                     STR_7:	
   748  04E9  3434               	retlw	52	;'4'
   749  04EA  342E               	retlw	46	;'.'
   750  04EB  3420               	retlw	32	;' '
   751  04EC  3453               	retlw	83	;'S'
   752  04ED  3474               	retlw	116	;'t'
   753  04EE  3461               	retlw	97	;'a'
   754  04EF  3472               	retlw	114	;'r'
   755  04F0  3474               	retlw	116	;'t'
   756  04F1  3400               	retlw	0
   757  04F2                     STR_16:	
   758  04F2  343A               	retlw	58	;':'
   759  04F3  3400               	retlw	0
   760  0413                     
   761                           ; #config settings
   762  0000                     
   763                           	psect	cinit
   764  0013                     start_initialization:	
   765  0013                     __initialization:	
   766                           
   767                           ; Initialize objects allocated to COMMON
   768  0013  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   769  0018  00FA               	movwf	__pdataCOMMON& (0+127)
   770                           
   771                           ; Clear objects allocated to BANK0
   772  0019  1383               	bcf	3,7	;select IRP bank0
   773  001A  3020               	movlw	low __pbssBANK0
   774  001B  0084               	movwf	4
   775  001C  3036               	movlw	low (__pbssBANK0+22)
   776  001D  120A  158A  2666  120A  118A  	fcall	clear_ram0
   777                           
   778                           ; Clear objects allocated to COMMON
   779  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   780  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   781  0024                     end_of_initialization:	
   782                           ;End of C runtime variable initialization code
   783                           
   784  0024                     __end_of__initialization:	
   785  0024  0183               	clrf	3
   786  0025  120A  118A  2CF4   	ljmp	_main	;jump to C main() function
   787                           
   788                           	psect	bssCOMMON
   789  0078                     __pbssCOMMON:	
   790  0078                     _min:	
   791  0078                     	ds	2
   792                           
   793                           	psect	dataCOMMON
   794  007A                     __pdataCOMMON:	
   795  007A                     read_matrix_keypad@once:	
   796  007A                     	ds	1
   797                           
   798                           	psect	bssBANK0
   799  0020                     __pbssBANK0:	
   800  0020                     isr@count:	
   801  0020                     	ds	2
   802  0022                     set_time@key_count:	
   803  0022                     	ds	2
   804  0024                     set_time@blink_posi:	
   805  0024                     	ds	2
   806  0026                     set_time@wait:	
   807  0026                     	ds	2
   808  0028                     set_time@blink:	
   809  0028                     	ds	2
   810  002A                     _sec:	
   811  002A                     	ds	2
   812  002C                     _reset_flag:	
   813  002C                     	ds	2
   814  002E                     _operation_mode:	
   815  002E                     	ds	2
   816  0030                     _sec_arr:	
   817  0030                     	ds	3
   818  0033                     _min_arr:	
   819  0033                     	ds	3
   820                           
   821                           	psect	clrtext
   822  0E66                     clear_ram0:	
   823                           ;	Called with FSR containing the base address, and
   824                           ;	W with the last address+1
   825                           
   826  0E66  0064               	clrwdt	;clear the watchdog before getting into this loop
   827  0E67                     clrloop0:	
   828  0E67  0180               	clrf	0	;clear RAM location pointed to by FSR
   829  0E68  0A84               	incf	4,f	;increment pointer
   830  0E69  0604               	xorwf	4,w	;XOR with final address
   831  0E6A  1903               	btfsc	3,2	;have we reached the end yet?
   832  0E6B  3400               	retlw	0	;all done for this memory range, return
   833  0E6C  0604               	xorwf	4,w	;XOR again to restore value
   834  0E6D  2E67               	goto	clrloop0	;do the next byte
   835                           
   836                           	psect	cstackCOMMON
   837  0070                     __pcstackCOMMON:	
   838  0070                     ?_init_clcd:	
   839  0070                     ?_init_matrix_keypad:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_init_timer2:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_power_on_screen:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_clear_display:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_read_matrix_keypad:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_operation_call:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_time_display:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_set_time:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_init_config:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_main:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_cooking_operations:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_door_status_check:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_init_display_controller:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_scan_keypad:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_isr:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ??_isr:	
   885                           ; 1 bytes @ 0x0
   886                           
   887                           
   888                           ; 1 bytes @ 0x0
   889  0070                     	ds	3
   890  0073                     ??_init_matrix_keypad:	
   891  0073                     ??_init_timer2:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  0073                     ?_clcd_write:	
   895                           ; 1 bytes @ 0x3
   896                           
   897  0073                     ??_scan_keypad:	
   898                           ; 1 bytes @ 0x3
   899                           
   900  0073                     ?___wmul:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0073                     ?___awdiv:	
   904                           ; 2 bytes @ 0x3
   905                           
   906  0073                     ?___awmod:	
   907                           ; 2 bytes @ 0x3
   908                           
   909  0073                     clcd_write@mode:	
   910                           ; 2 bytes @ 0x3
   911                           
   912  0073                     scan_keypad@i:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     ___wmul@multiplier:	
   916                           ; 2 bytes @ 0x3
   917                           
   918  0073                     ___awdiv@divisor:	
   919                           ; 2 bytes @ 0x3
   920                           
   921  0073                     ___awmod@divisor:	
   922                           ; 2 bytes @ 0x3
   923                           
   924                           
   925                           ; 2 bytes @ 0x3
   926  0073                     	ds	1
   927  0074                     ??_clcd_write:	
   928                           
   929                           ; 1 bytes @ 0x4
   930  0074                     	ds	1
   931  0075                     ??_read_matrix_keypad:	
   932  0075                     ___wmul@multiplicand:	
   933                           ; 1 bytes @ 0x5
   934                           
   935  0075                     ___awdiv@dividend:	
   936                           ; 2 bytes @ 0x5
   937                           
   938  0075                     ___awmod@dividend:	
   939                           ; 2 bytes @ 0x5
   940                           
   941                           
   942                           ; 2 bytes @ 0x5
   943  0075                     	ds	1
   944  0076                     clcd_write@byte:	
   945  0076                     read_matrix_keypad@mode:	
   946                           ; 1 bytes @ 0x6
   947                           
   948                           
   949                           ; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0077                     ??_init_clcd:	
   952  0077                     ??_clear_display:	
   953                           ; 1 bytes @ 0x7
   954                           
   955  0077                     ??_clcd_print:	
   956                           ; 1 bytes @ 0x7
   957                           
   958  0077                     ?_clcd_putch:	
   959                           ; 1 bytes @ 0x7
   960                           
   961  0077                     ??_init_config:	
   962                           ; 1 bytes @ 0x7
   963                           
   964  0077                     ??_door_status_check:	
   965                           ; 1 bytes @ 0x7
   966                           
   967  0077                     ??___wmul:	
   968                           ; 1 bytes @ 0x7
   969                           
   970  0077                     ??___awdiv:	
   971                           ; 1 bytes @ 0x7
   972                           
   973  0077                     ??___awmod:	
   974                           ; 1 bytes @ 0x7
   975                           
   976  0077                     clcd_putch@addr:	
   977                           ; 1 bytes @ 0x7
   978                           
   979  0077                     read_matrix_keypad@key:	
   980                           ; 1 bytes @ 0x7
   981                           
   982                           
   983                           ; 1 bytes @ 0x7
   984  0077                     	ds	1
   985  0078                     ??_operation_call:	
   986  0078                     ??_clcd_putch:	
   987                           ; 1 bytes @ 0x8
   988                           
   989                           
   990                           	psect	cstackBANK0
   991  0036                     __pcstackBANK0:	
   992                           ; 1 bytes @ 0x8
   993                           
   994  0036                     ?_clcd_print:	
   995  0036                     ??_init_display_controller:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0036                     clcd_putch@data:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0036                     ___awdiv@counter:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0036                     ___awmod@counter:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0036                     clcd_print@str:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0036                     ___wmul@product:	
  1011                           ; 2 bytes @ 0x0
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x0
  1015  0036                     	ds	1
  1016  0037                     ___awdiv@sign:	
  1017  0037                     ___awmod@sign:	
  1018                           ; 1 bytes @ 0x1
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x1
  1022  0037                     	ds	1
  1023  0038                     clcd_print@addr:	
  1024  0038                     ___awdiv@quotient:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029  0038                     	ds	1
  1030  0039                     ??_power_on_screen:	
  1031  0039                     ??_cooking_operations:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x3
  1036  0039                     	ds	1
  1037  003A                     ??_time_display:	
  1038  003A                     ??_set_time:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x4
  1043  003A                     	ds	2
  1044  003C                     set_time@key:	
  1045  003C                     power_on_screen@i:	
  1046                           ; 1 bytes @ 0x6
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x6
  1050  003C                     	ds	1
  1051  003D                     operation_call@key:	
  1052                           
  1053                           ; 1 bytes @ 0x7
  1054  003D                     	ds	1
  1055  003E                     power_on_screen@i_112:	
  1056                           
  1057                           ; 2 bytes @ 0x8
  1058  003E                     	ds	2
  1059  0040                     ??_main:	
  1060                           
  1061                           ; 1 bytes @ 0xA
  1062  0040                     	ds	3
  1063  0043                     main@key:	
  1064                           
  1065                           ; 1 bytes @ 0xD
  1066  0043                     	ds	1
  1067                           
  1068                           	psect	maintext
  1069  04F4                     __pmaintext:	
  1070 ;;
  1071 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1072 ;;
  1073 ;; *************** function _main *****************
  1074 ;; Defined at:
  1075 ;;		line 32 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  key             1   13[BANK0 ] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : B00/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       1       0       0       0
  1091 ;;      Temps:          0       3       0       0       0
  1092 ;;      Totals:         0       4       0       0       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels required when called:    6
  1095 ;; This function calls:
  1096 ;;		_clcd_print
  1097 ;;		_clcd_write
  1098 ;;		_clear_display
  1099 ;;		_init_config
  1100 ;;		_operation_call
  1101 ;;		_power_on_screen
  1102 ;;		_read_matrix_keypad
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _main
  1110  04F4                     _main:	
  1111  04F4                     l2618:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1114                           
  1115                           
  1116                           ;main.c: 33:         {;main.c: 34:             operation_mode = 0x02;
  1117  04F4  120A  158A  26AB  120A  118A  	fcall	_init_config
  1118  04F9                     l2620:	
  1119                           
  1120                           ;main.c: 35:             reset_flag = 0x11;
  1121  04F9  120A  118A  2694  120A  118A  	fcall	_power_on_screen
  1122  04FE                     l2622:	
  1123                           
  1124                           ;main.c: 36:             clcd_write(0x0C, 0);
  1125  04FE  120A  158A  265E  120A  118A  	fcall	_clear_display
  1126  0503                     l2624:	
  1127                           
  1128                           ;main.c: 37:             clear_display();
  1129  0503  3001               	movlw	1
  1130  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0506  00AE               	movwf	_operation_mode
  1133  0507  3000               	movlw	0
  1134  0508  00AF               	movwf	_operation_mode+1
  1135  0509                     l2626:	
  1136                           
  1137                           ;main.c: 40:             _delay((unsigned long)((2000)*(20000000/4000.0)));
  1138  0509  3001               	movlw	1
  1139  050A  120A  118A  27D9  120A  118A  	fcall	_read_matrix_keypad
  1140  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0511  00C0               	movwf	??_main
  1143  0512  0840               	movf	??_main,w
  1144  0513  00C3               	movwf	main@key
  1145  0514                     l2628:	
  1146                           
  1147                           ;main.c: 41:             clear_display();
  1148  0514  3002               	movlw	2
  1149  0515  062E               	xorwf	_operation_mode,w
  1150  0516  042F               	iorwf	_operation_mode+1,w
  1151  0517  1D03               	btfss	3,2
  1152  0518  2D1A               	goto	u2201
  1153  0519  2D1B               	goto	u2200
  1154  051A                     u2201:	
  1155  051A  2D1D               	goto	l2632
  1156  051B                     u2200:	
  1157  051B  2DDC               	goto	l2694
  1158  051C                     l2630:	
  1159                           
  1160                           ;main.c: 42:         };main.c: 44:         {
  1161  051C  2DDC               	goto	l2694
  1162  051D                     l2632:	
  1163  051D  0343               	decf	main@key,w
  1164  051E  1D03               	btfss	3,2
  1165  051F  2D21               	goto	u2211
  1166  0520  2D22               	goto	u2210
  1167  0521                     u2211:	
  1168  0521  2D59               	goto	l2646
  1169  0522                     u2210:	
  1170  0522                     l2634:	
  1171                           
  1172                           ;main.c: 46:             reset_flag = 0x12;;main.c: 47:             clear_display();
  1173  0522  3002               	movlw	2
  1174  0523  00AE               	movwf	_operation_mode
  1175  0524  3000               	movlw	0
  1176  0525  00AF               	movwf	_operation_mode+1
  1177                           
  1178                           ;main.c: 48:         }
  1179  0526  3011               	movlw	17
  1180  0527  00AC               	movwf	_reset_flag
  1181  0528  3000               	movlw	0
  1182  0529  00AD               	movwf	_reset_flag+1
  1183  052A                     l2636:	
  1184                           
  1185                           ;main.c: 49:         else if(key==3)
  1186  052A  01F3               	clrf	clcd_write@mode
  1187  052B  300C               	movlw	12
  1188  052C  120A  158A  2727  120A  118A  	fcall	_clcd_write
  1189  0531                     l2638:	
  1190                           
  1191                           ;main.c: 50:         {
  1192  0531  120A  158A  265E  120A  118A  	fcall	_clear_display
  1193  0536                     l2640:	
  1194                           
  1195                           ;main.c: 52:         }
  1196  0536  3091               	movlw	low (STR_1| (0+32768))
  1197  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0539  00B6               	movwf	clcd_print@str
  1200  053A  3084               	movlw	high (STR_1| (0+32768))
  1201  053B  00B7               	movwf	clcd_print@str+1
  1202  053C  30C0               	movlw	192
  1203  053D  00C0               	movwf	??_main
  1204  053E  0840               	movf	??_main,w
  1205  053F  00B8               	movwf	clcd_print@addr
  1206  0540  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  1207  0545                     l2642:	
  1208                           
  1209                           ;main.c: 53:         else if(key==4)
  1210  0545  3033               	movlw	51
  1211  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0548  00C2               	movwf	??_main+2
  1214  0549  30BB               	movlw	187
  1215  054A  00C1               	movwf	??_main+1
  1216  054B  30DF               	movlw	223
  1217  054C  00C0               	movwf	??_main
  1218  054D                     u2317:	
  1219  054D  0BC0               	decfsz	??_main,f
  1220  054E  2D4D               	goto	u2317
  1221  054F  0BC1               	decfsz	??_main+1,f
  1222  0550  2D4D               	goto	u2317
  1223  0551  0BC2               	decfsz	??_main+2,f
  1224  0552  2D4D               	goto	u2317
  1225  0553                     l2644:	
  1226                           
  1227                           ;main.c: 54:         {
  1228  0553  120A  158A  265E  120A  118A  	fcall	_clear_display
  1229                           
  1230                           ;main.c: 55:             if(operation_mode == 0x01)
  1231  0558  2DDC               	goto	l2694
  1232  0559                     l2646:	
  1233  0559  3002               	movlw	2
  1234  055A  0643               	xorwf	main@key,w
  1235  055B  1D03               	btfss	3,2
  1236  055C  2D5E               	goto	u2221
  1237  055D  2D5F               	goto	u2220
  1238  055E                     u2221:	
  1239  055E  2D68               	goto	l2652
  1240  055F                     u2220:	
  1241  055F                     l2648:	
  1242                           
  1243                           ;main.c: 57:                 min = 0;;main.c: 58:                 sec = 30;
  1244  055F  3003               	movlw	3
  1245  0560  00AE               	movwf	_operation_mode
  1246  0561  3000               	movlw	0
  1247  0562  00AF               	movwf	_operation_mode+1
  1248                           
  1249                           ;main.c: 59:                 TMR2ON = 1;
  1250  0563  3012               	movlw	18
  1251  0564  00AC               	movwf	_reset_flag
  1252  0565  3000               	movlw	0
  1253  0566  00AD               	movwf	_reset_flag+1
  1254  0567  2D53               	goto	l2644
  1255  0568                     l2652:	
  1256  0568  3003               	movlw	3
  1257  0569  0643               	xorwf	main@key,w
  1258  056A  1D03               	btfss	3,2
  1259  056B  2D6D               	goto	u2231
  1260  056C  2D6E               	goto	u2230
  1261  056D                     u2231:	
  1262  056D  2D73               	goto	l2656
  1263  056E                     u2230:	
  1264  056E                     l2654:	
  1265                           
  1266                           ;main.c: 63:             else if(operation_mode == 0x06);main.c: 64:             {
  1267  056E  3004               	movlw	4
  1268  056F  00AE               	movwf	_operation_mode
  1269  0570  3000               	movlw	0
  1270  0571  00AF               	movwf	_operation_mode+1
  1271                           
  1272                           ;main.c: 65:                 sec = sec + 30;
  1273  0572  2DDC               	goto	l2694
  1274  0573                     l2656:	
  1275  0573  3004               	movlw	4
  1276  0574  0643               	xorwf	main@key,w
  1277  0575  1D03               	btfss	3,2
  1278  0576  2D78               	goto	u2241
  1279  0577  2D79               	goto	u2240
  1280  0578                     u2241:	
  1281  0578  2DC7               	goto	l2686
  1282  0579                     u2240:	
  1283  0579                     l2658:	
  1284                           
  1285                           ;main.c: 67:                 {;main.c: 68:                     min++;
  1286  0579  032E               	decf	_operation_mode,w
  1287  057A  042F               	iorwf	_operation_mode+1,w
  1288  057B  1D03               	btfss	3,2
  1289  057C  2D7E               	goto	u2251
  1290  057D  2D7F               	goto	u2250
  1291  057E                     u2251:	
  1292  057E  2D8C               	goto	l2670
  1293  057F                     u2250:	
  1294  057F                     l2660:	
  1295                           
  1296                           ;main.c: 69:                     sec = sec - 60;;main.c: 70:                 }
  1297  057F  01F8               	clrf	_min
  1298  0580  01F9               	clrf	_min+1
  1299  0581                     l2662:	
  1300                           
  1301                           ;main.c: 71:             }
  1302  0581  301E               	movlw	30
  1303  0582  00AA               	movwf	_sec
  1304  0583  3000               	movlw	0
  1305  0584  00AB               	movwf	_sec+1
  1306  0585                     l2664:	
  1307                           
  1308                           ;main.c: 72:             else if(operation_mode == 0x07)
  1309  0585  1512               	bsf	18,2	;volatile
  1310  0586                     l2666:	
  1311                           
  1312                           ;main.c: 73:             {
  1313  0586  1507               	bsf	7,2	;volatile
  1314  0587                     l2668:	
  1315                           
  1316                           ;main.c: 74:                 TMR2ON = 1;
  1317  0587  3006               	movlw	6
  1318  0588  00AE               	movwf	_operation_mode
  1319  0589  3000               	movlw	0
  1320  058A  00AF               	movwf	_operation_mode+1
  1321                           
  1322                           ;main.c: 75:                 RC2 = 1;
  1323  058B  2DDC               	goto	l2694
  1324  058C                     l2670:	
  1325  058C  3006               	movlw	6
  1326  058D  062E               	xorwf	_operation_mode,w
  1327  058E  042F               	iorwf	_operation_mode+1,w
  1328  058F  1D03               	btfss	3,2
  1329  0590  2D92               	goto	u2261
  1330  0591  2D93               	goto	u2260
  1331  0592                     u2261:	
  1332  0592  2DB9               	goto	l2680
  1333  0593                     u2260:	
  1334  0593                     l2672:	
  1335                           
  1336                           ;main.c: 77:             };main.c: 78: 
  1337  0593  082A               	movf	_sec,w
  1338  0594  3E1E               	addlw	30
  1339  0595  00AA               	movwf	_sec
  1340  0596  082B               	movf	_sec+1,w
  1341  0597  1803               	skipnc
  1342  0598  3E01               	addlw	1
  1343  0599  3E00               	addlw	0
  1344  059A  00AB               	movwf	_sec+1
  1345  059B                     l2674:	
  1346                           
  1347                           ;main.c: 79:         }
  1348  059B  082B               	movf	_sec+1,w
  1349  059C  3A80               	xorlw	128
  1350  059D  00FF               	movwf	btemp+1
  1351  059E  3080               	movlw	128
  1352  059F  027F               	subwf	btemp+1,w
  1353  05A0  1D03               	skipz
  1354  05A1  2DA4               	goto	u2275
  1355  05A2  303C               	movlw	60
  1356  05A3  022A               	subwf	_sec,w
  1357  05A4                     u2275:	
  1358  05A4  1C03               	skipc
  1359  05A5  2DA7               	goto	u2271
  1360  05A6  2DA8               	goto	u2270
  1361  05A7                     u2271:	
  1362  05A7  2D1C               	goto	l2630
  1363  05A8                     u2270:	
  1364  05A8                     l2676:	
  1365                           
  1366                           ;main.c: 80:         else if(key == 5);main.c: 81:         {
  1367  05A8  3001               	movlw	1
  1368  05A9  07F8               	addwf	_min,f
  1369  05AA  1803               	skipnc
  1370  05AB  0AF9               	incf	_min+1,f
  1371  05AC  3000               	movlw	0
  1372  05AD  07F9               	addwf	_min+1,f
  1373  05AE                     l2678:	
  1374                           
  1375                           ;main.c: 82:             operation_mode = 0x07;
  1376  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1377  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1378  05B0  082A               	movf	_sec,w
  1379  05B1  3EC4               	addlw	196
  1380  05B2  00AA               	movwf	_sec
  1381  05B3  082B               	movf	_sec+1,w
  1382  05B4  1803               	skipnc
  1383  05B5  3E01               	addlw	1
  1384  05B6  3EFF               	addlw	255
  1385  05B7  00AB               	movwf	_sec+1
  1386  05B8  2DDC               	goto	l2694
  1387  05B9                     l2680:	
  1388  05B9  3007               	movlw	7
  1389  05BA  062E               	xorwf	_operation_mode,w
  1390  05BB  042F               	iorwf	_operation_mode+1,w
  1391  05BC  1D03               	btfss	3,2
  1392  05BD  2DBF               	goto	u2281
  1393  05BE  2DC0               	goto	u2280
  1394  05BF                     u2281:	
  1395  05BF  2D1C               	goto	l2630
  1396  05C0                     u2280:	
  1397  05C0                     l2682:	
  1398                           
  1399                           ;main.c: 86:             operation_mode = 0x08;;main.c: 87:         }
  1400  05C0  1512               	bsf	18,2	;volatile
  1401                           
  1402                           ;main.c: 88:         operation_call(key);
  1403  05C1  1507               	bsf	7,2	;volatile
  1404  05C2                     l2684:	
  1405                           
  1406                           ;main.c: 89: 
  1407  05C2  3005               	movlw	5
  1408  05C3  00AE               	movwf	_operation_mode
  1409  05C4  3000               	movlw	0
  1410  05C5  00AF               	movwf	_operation_mode+1
  1411  05C6  2DDC               	goto	l2694
  1412  05C7                     l2686:	
  1413  05C7  3005               	movlw	5
  1414  05C8  0643               	xorwf	main@key,w
  1415  05C9  1D03               	btfss	3,2
  1416  05CA  2DCC               	goto	u2291
  1417  05CB  2DCD               	goto	u2290
  1418  05CC                     u2291:	
  1419  05CC  2DD2               	goto	l2690
  1420  05CD                     u2290:	
  1421  05CD                     l2688:	
  1422                           
  1423                           ;main.c: 94: void power_on_screen(void);main.c: 95: {
  1424  05CD  3007               	movlw	7
  1425  05CE  00AE               	movwf	_operation_mode
  1426  05CF  3000               	movlw	0
  1427  05D0  00AF               	movwf	_operation_mode+1
  1428                           
  1429                           ;main.c: 96:     for(int i = 0;i < 16;i++){
  1430  05D1  2DDC               	goto	l2694
  1431  05D2                     l2690:	
  1432  05D2  3006               	movlw	6
  1433  05D3  0643               	xorwf	main@key,w
  1434  05D4  1D03               	btfss	3,2
  1435  05D5  2DD7               	goto	u2301
  1436  05D6  2DD8               	goto	u2300
  1437  05D7                     u2301:	
  1438  05D7  2D1C               	goto	l2630
  1439  05D8                     u2300:	
  1440  05D8                     l2692:	
  1441                           
  1442                           ;main.c: 98:     };main.c: 99:     clcd_print("Powering ON",(0xC0 + 2));
  1443  05D8  3008               	movlw	8
  1444  05D9  00AE               	movwf	_operation_mode
  1445  05DA  3000               	movlw	0
  1446  05DB  00AF               	movwf	_operation_mode+1
  1447  05DC                     l2694:	
  1448                           
  1449                           ;main.c: 101:     for(int i = 0;i < 16;i++){
  1450  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1451  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1452  05DE  0843               	movf	main@key,w
  1453  05DF  120A  118A  2303  120A  118A  	fcall	_operation_call
  1454  05E4  2D09               	goto	l2626
  1455  05E5  120A  118A  2810   	ljmp	start
  1456  05E8                     __end_of_main:	
  1457                           
  1458                           	psect	text1
  1459  07D9                     __ptext1:	
  1460 ;; *************** function _read_matrix_keypad *****************
  1461 ;; Defined at:
  1462 ;;		line 108 in file "matrix_keypad.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  mode            1    wreg     unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  mode            1    6[COMMON] unsigned char 
  1467 ;;  key             1    7[COMMON] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      unsigned char 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         2       0       0       0       0
  1479 ;;      Temps:          1       0       0       0       0
  1480 ;;      Totals:         3       0       0       0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    2
  1484 ;; This function calls:
  1485 ;;		_scan_keypad
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _read_matrix_keypad
  1493  07D9                     _read_matrix_keypad:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1497                           ;read_matrix_keypad@mode stored from wreg
  1498  07D9  00F6               	movwf	read_matrix_keypad@mode
  1499  07DA                     l2016:	
  1500                           
  1501                           ;matrix_keypad.c: 108: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 109: {;matrix_keypad.c: 110:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          1:     unsigned char key;;matrix_keypad.c: 113:     key = scan_keypad();
  1502  07DA  120A  118A  25E8  120A  118A  	fcall	_scan_keypad
  1503  07DF  00F5               	movwf	??_read_matrix_keypad
  1504  07E0  0875               	movf	??_read_matrix_keypad,w
  1505  07E1  00F7               	movwf	read_matrix_keypad@key
  1506  07E2                     l2018:	
  1507                           
  1508                           ;matrix_keypad.c: 115:     if (mode == 0)
  1509  07E2  0876               	movf	read_matrix_keypad@mode,w
  1510  07E3  1D03               	btfss	3,2
  1511  07E4  2FE6               	goto	u1511
  1512  07E5  2FE7               	goto	u1510
  1513  07E6                     u1511:	
  1514  07E6  2FE9               	goto	l2026
  1515  07E7                     u1510:	
  1516  07E7                     l2020:	
  1517                           
  1518                           ;matrix_keypad.c: 116:     {;matrix_keypad.c: 117:         return key;
  1519  07E7  0877               	movf	read_matrix_keypad@key,w
  1520  07E8  2FFD               	goto	l245
  1521  07E9                     l2026:	
  1522                           
  1523                           ;matrix_keypad.c: 120:     {;matrix_keypad.c: 121:         if ((key != 0xFF) && once)
  1524  07E9  0A77               	incf	read_matrix_keypad@key,w
  1525  07EA  1903               	btfsc	3,2
  1526  07EB  2FED               	goto	u1521
  1527  07EC  2FEE               	goto	u1520
  1528  07ED                     u1521:	
  1529  07ED  2FF5               	goto	l2038
  1530  07EE                     u1520:	
  1531  07EE                     l2028:	
  1532  07EE  087A               	movf	read_matrix_keypad@once,w
  1533  07EF  1903               	btfsc	3,2
  1534  07F0  2FF2               	goto	u1531
  1535  07F1  2FF3               	goto	u1530
  1536  07F2                     u1531:	
  1537  07F2  2FF5               	goto	l2038
  1538  07F3                     u1530:	
  1539  07F3                     l2030:	
  1540                           
  1541                           ;matrix_keypad.c: 122:         {;matrix_keypad.c: 123:             once = 0;
  1542  07F3  01FA               	clrf	read_matrix_keypad@once
  1543  07F4  2FE7               	goto	l2020
  1544  07F5                     l2038:	
  1545  07F5  0A77               	incf	read_matrix_keypad@key,w
  1546  07F6  1D03               	btfss	3,2
  1547  07F7  2FF9               	goto	u1541
  1548  07F8  2FFA               	goto	u1540
  1549  07F9                     u1541:	
  1550  07F9  2FFC               	goto	l2042
  1551  07FA                     u1540:	
  1552  07FA                     l2040:	
  1553                           
  1554                           ;matrix_keypad.c: 128:         {;matrix_keypad.c: 129:             once = 1;
  1555  07FA  01FA               	clrf	read_matrix_keypad@once
  1556  07FB  0AFA               	incf	read_matrix_keypad@once,f
  1557  07FC                     l2042:	
  1558                           
  1559                           ;matrix_keypad.c: 133:     return 0xFF;
  1560  07FC  30FF               	movlw	255
  1561  07FD                     l245:	
  1562  07FD  0008               	return
  1563  07FE                     __end_of_read_matrix_keypad:	
  1564                           
  1565                           	psect	text2
  1566  05E8                     __ptext2:	
  1567 ;; *************** function _scan_keypad *****************
  1568 ;; Defined at:
  1569 ;;		line 21 in file "matrix_keypad.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  i               2    3[COMMON] int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      unsigned char 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         2       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0
  1586 ;;      Totals:         2       0       0       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_read_matrix_keypad
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _scan_keypad
  1599  05E8                     _scan_keypad:	
  1600  05E8                     l1888:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1603                           
  1604                           
  1605                           ;matrix_keypad.c: 23:     int i;;matrix_keypad.c: 25:     RD3 = 0;
  1606  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1607  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1608  05EA  1188               	bcf	8,3	;volatile
  1609                           
  1610                           ;matrix_keypad.c: 26:     RD2 = 1;
  1611  05EB  1508               	bsf	8,2	;volatile
  1612                           
  1613                           ;matrix_keypad.c: 27:     RD1 = 1;
  1614  05EC  1488               	bsf	8,1	;volatile
  1615                           
  1616                           ;matrix_keypad.c: 28:     RD0 = 1;
  1617  05ED  1408               	bsf	8,0	;volatile
  1618  05EE                     l1890:	
  1619                           
  1620                           ;matrix_keypad.c: 30:     for (i = 100; i--; );
  1621  05EE  3064               	movlw	100
  1622  05EF  00F3               	movwf	scan_keypad@i
  1623  05F0  3000               	movlw	0
  1624  05F1  00F4               	movwf	scan_keypad@i+1
  1625  05F2                     l1892:	
  1626  05F2  30FF               	movlw	255
  1627  05F3  07F3               	addwf	scan_keypad@i,f
  1628  05F4  1803               	skipnc
  1629  05F5  0AF4               	incf	scan_keypad@i+1,f
  1630  05F6  30FF               	movlw	255
  1631  05F7  07F4               	addwf	scan_keypad@i+1,f
  1632  05F8  0A73               	incf	scan_keypad@i,w
  1633  05F9  1D03               	skipz
  1634  05FA  2DFF               	goto	u1331
  1635  05FB  0A74               	incf	scan_keypad@i+1,w
  1636  05FC  1D03               	btfss	3,2
  1637  05FD  2DFF               	goto	u1331
  1638  05FE  2E00               	goto	u1330
  1639  05FF                     u1331:	
  1640  05FF  2DF2               	goto	l1892
  1641  0600                     u1330:	
  1642  0600                     l209:	
  1643                           
  1644                           ;matrix_keypad.c: 32:     if (RB0 == 0)
  1645  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0602  1806               	btfsc	6,0	;volatile
  1648  0603  2E05               	goto	u1341
  1649  0604  2E06               	goto	u1340
  1650  0605                     u1341:	
  1651  0605  2E08               	goto	l210
  1652  0606                     u1340:	
  1653  0606                     l1894:	
  1654                           
  1655                           ;matrix_keypad.c: 33:     {;matrix_keypad.c: 34:         return 1;
  1656  0606  3001               	movlw	1
  1657  0607  2E93               	goto	l211
  1658  0608                     l210:	
  1659                           ;matrix_keypad.c: 36:     else if (RB1 == 0)
  1660                           
  1661  0608  1886               	btfsc	6,1	;volatile
  1662  0609  2E0B               	goto	u1351
  1663  060A  2E0C               	goto	u1350
  1664  060B                     u1351:	
  1665  060B  2E0E               	goto	l213
  1666  060C                     u1350:	
  1667  060C                     l1900:	
  1668                           
  1669                           ;matrix_keypad.c: 37:     {;matrix_keypad.c: 38:         return 2;
  1670  060C  3002               	movlw	2
  1671  060D  2E93               	goto	l211
  1672  060E                     l213:	
  1673                           ;matrix_keypad.c: 40:     else if (RB2 == 0)
  1674                           
  1675  060E  1906               	btfsc	6,2	;volatile
  1676  060F  2E11               	goto	u1361
  1677  0610  2E12               	goto	u1360
  1678  0611                     u1361:	
  1679  0611  2E14               	goto	l212
  1680  0612                     u1360:	
  1681  0612                     l1906:	
  1682                           
  1683                           ;matrix_keypad.c: 41:     {;matrix_keypad.c: 42:         return 3;
  1684  0612  3003               	movlw	3
  1685  0613  2E93               	goto	l211
  1686  0614                     l212:	
  1687                           
  1688                           ;matrix_keypad.c: 45:     RD3 = 1;
  1689  0614  1588               	bsf	8,3	;volatile
  1690                           
  1691                           ;matrix_keypad.c: 46:     RD2 = 0;
  1692  0615  1108               	bcf	8,2	;volatile
  1693                           
  1694                           ;matrix_keypad.c: 47:     RD1 = 1;
  1695  0616  1488               	bsf	8,1	;volatile
  1696                           
  1697                           ;matrix_keypad.c: 48:     RD0 = 1;
  1698  0617  1408               	bsf	8,0	;volatile
  1699  0618                     l1910:	
  1700                           
  1701                           ;matrix_keypad.c: 50:     for (i = 100; i--; );
  1702  0618  3064               	movlw	100
  1703  0619  00F3               	movwf	scan_keypad@i
  1704  061A  3000               	movlw	0
  1705  061B  00F4               	movwf	scan_keypad@i+1
  1706  061C                     l1912:	
  1707  061C  30FF               	movlw	255
  1708  061D  07F3               	addwf	scan_keypad@i,f
  1709  061E  1803               	skipnc
  1710  061F  0AF4               	incf	scan_keypad@i+1,f
  1711  0620  30FF               	movlw	255
  1712  0621  07F4               	addwf	scan_keypad@i+1,f
  1713  0622  0A73               	incf	scan_keypad@i,w
  1714  0623  1D03               	skipz
  1715  0624  2E29               	goto	u1371
  1716  0625  0A74               	incf	scan_keypad@i+1,w
  1717  0626  1D03               	btfss	3,2
  1718  0627  2E29               	goto	u1371
  1719  0628  2E2A               	goto	u1370
  1720  0629                     u1371:	
  1721  0629  2E1C               	goto	l1912
  1722  062A                     u1370:	
  1723  062A                     l218:	
  1724                           
  1725                           ;matrix_keypad.c: 52:     if (RB0 == 0)
  1726  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1727  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1728  062C  1806               	btfsc	6,0	;volatile
  1729  062D  2E2F               	goto	u1381
  1730  062E  2E30               	goto	u1380
  1731  062F                     u1381:	
  1732  062F  2E32               	goto	l219
  1733  0630                     u1380:	
  1734  0630                     l1914:	
  1735                           
  1736                           ;matrix_keypad.c: 53:     {;matrix_keypad.c: 54:         return 4;
  1737  0630  3004               	movlw	4
  1738  0631  2E93               	goto	l211
  1739  0632                     l219:	
  1740                           ;matrix_keypad.c: 56:     else if (RB1 == 0)
  1741                           
  1742  0632  1886               	btfsc	6,1	;volatile
  1743  0633  2E35               	goto	u1391
  1744  0634  2E36               	goto	u1390
  1745  0635                     u1391:	
  1746  0635  2E38               	goto	l221
  1747  0636                     u1390:	
  1748  0636                     l1920:	
  1749                           
  1750                           ;matrix_keypad.c: 57:     {;matrix_keypad.c: 58:         return 5;
  1751  0636  3005               	movlw	5
  1752  0637  2E93               	goto	l211
  1753  0638                     l221:	
  1754                           ;matrix_keypad.c: 60:     else if (RB2 == 0)
  1755                           
  1756  0638  1906               	btfsc	6,2	;volatile
  1757  0639  2E3B               	goto	u1401
  1758  063A  2E3C               	goto	u1400
  1759  063B                     u1401:	
  1760  063B  2E3E               	goto	l220
  1761  063C                     u1400:	
  1762  063C                     l1926:	
  1763                           
  1764                           ;matrix_keypad.c: 61:     {;matrix_keypad.c: 62:         return 6;
  1765  063C  3006               	movlw	6
  1766  063D  2E93               	goto	l211
  1767  063E                     l220:	
  1768                           
  1769                           ;matrix_keypad.c: 65:     RD3 = 1;
  1770  063E  1588               	bsf	8,3	;volatile
  1771                           
  1772                           ;matrix_keypad.c: 66:     RD2 = 1;
  1773  063F  1508               	bsf	8,2	;volatile
  1774                           
  1775                           ;matrix_keypad.c: 67:     RD1 = 0;
  1776  0640  1088               	bcf	8,1	;volatile
  1777                           
  1778                           ;matrix_keypad.c: 68:     RD0 = 1;
  1779  0641  1408               	bsf	8,0	;volatile
  1780  0642                     l1930:	
  1781                           
  1782                           ;matrix_keypad.c: 70:     for (i = 100; i--; );
  1783  0642  3064               	movlw	100
  1784  0643  00F3               	movwf	scan_keypad@i
  1785  0644  3000               	movlw	0
  1786  0645  00F4               	movwf	scan_keypad@i+1
  1787  0646                     l1932:	
  1788  0646  30FF               	movlw	255
  1789  0647  07F3               	addwf	scan_keypad@i,f
  1790  0648  1803               	skipnc
  1791  0649  0AF4               	incf	scan_keypad@i+1,f
  1792  064A  30FF               	movlw	255
  1793  064B  07F4               	addwf	scan_keypad@i+1,f
  1794  064C  0A73               	incf	scan_keypad@i,w
  1795  064D  1D03               	skipz
  1796  064E  2E53               	goto	u1411
  1797  064F  0A74               	incf	scan_keypad@i+1,w
  1798  0650  1D03               	btfss	3,2
  1799  0651  2E53               	goto	u1411
  1800  0652  2E54               	goto	u1410
  1801  0653                     u1411:	
  1802  0653  2E46               	goto	l1932
  1803  0654                     u1410:	
  1804  0654                     l226:	
  1805                           
  1806                           ;matrix_keypad.c: 72:     if (RB0 == 0)
  1807  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0656  1806               	btfsc	6,0	;volatile
  1810  0657  2E59               	goto	u1421
  1811  0658  2E5A               	goto	u1420
  1812  0659                     u1421:	
  1813  0659  2E5C               	goto	l227
  1814  065A                     u1420:	
  1815  065A                     l1934:	
  1816                           
  1817                           ;matrix_keypad.c: 73:     {;matrix_keypad.c: 74:         return 7;
  1818  065A  3007               	movlw	7
  1819  065B  2E93               	goto	l211
  1820  065C                     l227:	
  1821                           ;matrix_keypad.c: 76:     else if (RB1 == 0)
  1822                           
  1823  065C  1886               	btfsc	6,1	;volatile
  1824  065D  2E5F               	goto	u1431
  1825  065E  2E60               	goto	u1430
  1826  065F                     u1431:	
  1827  065F  2E62               	goto	l229
  1828  0660                     u1430:	
  1829  0660                     l1940:	
  1830                           
  1831                           ;matrix_keypad.c: 77:     {;matrix_keypad.c: 78:         return 8;
  1832  0660  3008               	movlw	8
  1833  0661  2E93               	goto	l211
  1834  0662                     l229:	
  1835                           ;matrix_keypad.c: 80:     else if (RB2 == 0)
  1836                           
  1837  0662  1906               	btfsc	6,2	;volatile
  1838  0663  2E65               	goto	u1441
  1839  0664  2E66               	goto	u1440
  1840  0665                     u1441:	
  1841  0665  2E68               	goto	l228
  1842  0666                     u1440:	
  1843  0666                     l1946:	
  1844                           
  1845                           ;matrix_keypad.c: 81:     {;matrix_keypad.c: 82:         return 9;
  1846  0666  3009               	movlw	9
  1847  0667  2E93               	goto	l211
  1848  0668                     l228:	
  1849                           
  1850                           ;matrix_keypad.c: 85:     RD3 = 1;
  1851  0668  1588               	bsf	8,3	;volatile
  1852                           
  1853                           ;matrix_keypad.c: 86:     RD2 = 1;
  1854  0669  1508               	bsf	8,2	;volatile
  1855                           
  1856                           ;matrix_keypad.c: 87:     RD1 = 1;
  1857  066A  1488               	bsf	8,1	;volatile
  1858                           
  1859                           ;matrix_keypad.c: 88:     RD0 = 0;
  1860  066B  1008               	bcf	8,0	;volatile
  1861  066C                     l1950:	
  1862                           
  1863                           ;matrix_keypad.c: 90:     for (i = 100; i--; );
  1864  066C  3064               	movlw	100
  1865  066D  00F3               	movwf	scan_keypad@i
  1866  066E  3000               	movlw	0
  1867  066F  00F4               	movwf	scan_keypad@i+1
  1868  0670                     l1952:	
  1869  0670  30FF               	movlw	255
  1870  0671  07F3               	addwf	scan_keypad@i,f
  1871  0672  1803               	skipnc
  1872  0673  0AF4               	incf	scan_keypad@i+1,f
  1873  0674  30FF               	movlw	255
  1874  0675  07F4               	addwf	scan_keypad@i+1,f
  1875  0676  0A73               	incf	scan_keypad@i,w
  1876  0677  1D03               	skipz
  1877  0678  2E7D               	goto	u1451
  1878  0679  0A74               	incf	scan_keypad@i+1,w
  1879  067A  1D03               	btfss	3,2
  1880  067B  2E7D               	goto	u1451
  1881  067C  2E7E               	goto	u1450
  1882  067D                     u1451:	
  1883  067D  2E70               	goto	l1952
  1884  067E                     u1450:	
  1885  067E                     l234:	
  1886                           
  1887                           ;matrix_keypad.c: 92:     if (RB0 == 0)
  1888  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1889  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0680  1806               	btfsc	6,0	;volatile
  1891  0681  2E83               	goto	u1461
  1892  0682  2E84               	goto	u1460
  1893  0683                     u1461:	
  1894  0683  2E86               	goto	l235
  1895  0684                     u1460:	
  1896  0684                     l1954:	
  1897                           
  1898                           ;matrix_keypad.c: 93:     {;matrix_keypad.c: 94:         return '*';
  1899  0684  302A               	movlw	42
  1900  0685  2E93               	goto	l211
  1901  0686                     l235:	
  1902                           ;matrix_keypad.c: 96:     else if (RB1 == 0)
  1903                           
  1904  0686  1886               	btfsc	6,1	;volatile
  1905  0687  2E89               	goto	u1471
  1906  0688  2E8A               	goto	u1470
  1907  0689                     u1471:	
  1908  0689  2E8C               	goto	l237
  1909  068A                     u1470:	
  1910  068A                     l1960:	
  1911                           
  1912                           ;matrix_keypad.c: 97:     {;matrix_keypad.c: 98:         return 0;
  1913  068A  3000               	movlw	0
  1914  068B  2E93               	goto	l211
  1915  068C                     l237:	
  1916                           ;matrix_keypad.c: 100:     else if (RB2 == 0)
  1917                           
  1918  068C  1906               	btfsc	6,2	;volatile
  1919  068D  2E8F               	goto	u1481
  1920  068E  2E90               	goto	u1480
  1921  068F                     u1481:	
  1922  068F  2E92               	goto	l1970
  1923  0690                     u1480:	
  1924  0690                     l1966:	
  1925                           
  1926                           ;matrix_keypad.c: 101:     {;matrix_keypad.c: 102:         return '#';
  1927  0690  3023               	movlw	35
  1928  0691  2E93               	goto	l211
  1929  0692                     l1970:	
  1930                           
  1931                           ;matrix_keypad.c: 105:     return 0xFF;
  1932  0692  30FF               	movlw	255
  1933  0693                     l211:	
  1934  0693  0008               	return
  1935  0694                     __end_of_scan_keypad:	
  1936                           
  1937                           	psect	text3
  1938  0694                     __ptext3:	
  1939 ;; *************** function _power_on_screen *****************
  1940 ;; Defined at:
  1941 ;;		line 107 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  i               2    8[BANK0 ] int 
  1946 ;;  i               2    6[BANK0 ] int 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       4       0       0       0
  1958 ;;      Temps:          0       3       0       0       0
  1959 ;;      Totals:         0       7       0       0       0
  1960 ;;Total ram usage:        7 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		_clcd_print
  1965 ;;		_clcd_putch
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _power_on_screen
  1973  0694                     _power_on_screen:	
  1974  0694                     l2562:	
  1975                           ;incstack = 0
  1976                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1977                           
  1978                           
  1979                           ;main.c: 109: }
  1980  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0696  01BC               	clrf	power_on_screen@i
  1983  0697  01BD               	clrf	power_on_screen@i+1
  1984  0698                     l2568:	
  1985                           
  1986                           ;main.c: 110: 
  1987  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1989  069A  083C               	movf	power_on_screen@i,w
  1990  069B  3E80               	addlw	128
  1991  069C  00B9               	movwf	??_power_on_screen
  1992  069D  0839               	movf	??_power_on_screen,w
  1993  069E  00F7               	movwf	clcd_putch@addr
  1994  069F  30FF               	movlw	255
  1995  06A0  120A  158A  2696  120A  118A  	fcall	_clcd_putch
  1996  06A5                     l2570:	
  1997                           
  1998                           ;main.c: 111: void cooking_operations(void){
  1999  06A5  3001               	movlw	1
  2000  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2001  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2002  06A8  07BC               	addwf	power_on_screen@i,f
  2003  06A9  1803               	skipnc
  2004  06AA  0ABD               	incf	power_on_screen@i+1,f
  2005  06AB  3000               	movlw	0
  2006  06AC  07BD               	addwf	power_on_screen@i+1,f
  2007  06AD                     l2572:	
  2008  06AD  083D               	movf	power_on_screen@i+1,w
  2009  06AE  3A80               	xorlw	128
  2010  06AF  00FF               	movwf	btemp+1
  2011  06B0  3080               	movlw	128
  2012  06B1  027F               	subwf	btemp+1,w
  2013  06B2  1D03               	skipz
  2014  06B3  2EB6               	goto	u2185
  2015  06B4  3010               	movlw	16
  2016  06B5  023C               	subwf	power_on_screen@i,w
  2017  06B6                     u2185:	
  2018  06B6  1C03               	skipc
  2019  06B7  2EB9               	goto	u2181
  2020  06B8  2EBA               	goto	u2180
  2021  06B9                     u2181:	
  2022  06B9  2E98               	goto	l2568
  2023  06BA                     u2180:	
  2024  06BA                     l2574:	
  2025                           
  2026                           ;main.c: 112:     clcd_print("1. Micro",(0x80 + 0));
  2027  06BA  30B7               	movlw	low (STR_2| (0+32768))
  2028  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2029  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2030  06BD  00B6               	movwf	clcd_print@str
  2031  06BE  3084               	movlw	high (STR_2| (0+32768))
  2032  06BF  00B7               	movwf	clcd_print@str+1
  2033  06C0  30C2               	movlw	194
  2034  06C1  00B9               	movwf	??_power_on_screen
  2035  06C2  0839               	movf	??_power_on_screen,w
  2036  06C3  00B8               	movwf	clcd_print@addr
  2037  06C4  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2038                           
  2039                           ;main.c: 113:     clcd_print("2. Grill",(0xC0 + 0));
  2040  06C9  3074               	movlw	low (STR_3| (0+32768))
  2041  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  2042  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  2043  06CC  00B6               	movwf	clcd_print@str
  2044  06CD  3084               	movlw	high (STR_3| (0+32768))
  2045  06CE  00B7               	movwf	clcd_print@str+1
  2046  06CF  3091               	movlw	145
  2047  06D0  00B9               	movwf	??_power_on_screen
  2048  06D1  0839               	movf	??_power_on_screen,w
  2049  06D2  00B8               	movwf	clcd_print@addr
  2050  06D3  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2051  06D8                     l2576:	
  2052                           
  2053                           ;main.c: 114:     clcd_print("3. Convection",(0x90 + 0));
  2054  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2055  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2056  06DA  01BE               	clrf	power_on_screen@i_112
  2057  06DB  01BF               	clrf	power_on_screen@i_112+1
  2058  06DC                     l2582:	
  2059                           
  2060                           ;main.c: 115:     clcd_print("4. Start",(0xD0 + 0));
  2061  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2062  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2063  06DE  083E               	movf	power_on_screen@i_112,w
  2064  06DF  3ED0               	addlw	208
  2065  06E0  00B9               	movwf	??_power_on_screen
  2066  06E1  0839               	movf	??_power_on_screen,w
  2067  06E2  00F7               	movwf	clcd_putch@addr
  2068  06E3  30FF               	movlw	255
  2069  06E4  120A  158A  2696  120A  118A  	fcall	_clcd_putch
  2070  06E9                     l2584:	
  2071                           
  2072                           ;main.c: 116: 
  2073  06E9  3001               	movlw	1
  2074  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  2075  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  2076  06EC  07BE               	addwf	power_on_screen@i_112,f
  2077  06ED  1803               	skipnc
  2078  06EE  0ABF               	incf	power_on_screen@i_112+1,f
  2079  06EF  3000               	movlw	0
  2080  06F0  07BF               	addwf	power_on_screen@i_112+1,f
  2081  06F1                     l2586:	
  2082  06F1  083F               	movf	power_on_screen@i_112+1,w
  2083  06F2  3A80               	xorlw	128
  2084  06F3  00FF               	movwf	btemp+1
  2085  06F4  3080               	movlw	128
  2086  06F5  027F               	subwf	btemp+1,w
  2087  06F6  1D03               	skipz
  2088  06F7  2EFA               	goto	u2195
  2089  06F8  3010               	movlw	16
  2090  06F9  023E               	subwf	power_on_screen@i_112,w
  2091  06FA                     u2195:	
  2092  06FA  1C03               	skipc
  2093  06FB  2EFD               	goto	u2191
  2094  06FC  2EFE               	goto	u2190
  2095  06FD                     u2191:	
  2096  06FD  2EDC               	goto	l2582
  2097  06FE                     u2190:	
  2098  06FE                     l2588:	
  2099                           
  2100                           ;main.c: 117:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  2101  06FE  3033               	movlw	51
  2102  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0701  00BB               	movwf	??_power_on_screen+2
  2105  0702  30BB               	movlw	187
  2106  0703  00BA               	movwf	??_power_on_screen+1
  2107  0704  30DF               	movlw	223
  2108  0705  00B9               	movwf	??_power_on_screen
  2109  0706                     u2327:	
  2110  0706  0BB9               	decfsz	??_power_on_screen,f
  2111  0707  2F06               	goto	u2327
  2112  0708  0BBA               	decfsz	??_power_on_screen+1,f
  2113  0709  2F06               	goto	u2327
  2114  070A  0BBB               	decfsz	??_power_on_screen+2,f
  2115  070B  2F06               	goto	u2327
  2116  070C                     l91:	
  2117  070C  0008               	return
  2118  070D                     __end_of_power_on_screen:	
  2119                           
  2120                           	psect	text4
  2121  0303                     __ptext4:	
  2122 ;; *************** function _operation_call *****************
  2123 ;; Defined at:
  2124 ;;		line 134 in file "main.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  key             1    wreg     unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  key             1    7[BANK0 ] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       1       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       1       0       0       0
  2142 ;;Total ram usage:        1 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    5
  2145 ;; This function calls:
  2146 ;;		_clcd_write
  2147 ;;		_clear_display
  2148 ;;		_cooking_operations
  2149 ;;		_set_time
  2150 ;;		_time_display
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _operation_call
  2158  0303                     _operation_call:	
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _operation_call: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2162                           ;operation_call@key stored from wreg
  2163  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0305  00BD               	movwf	operation_call@key
  2166  0306                     l2590:	
  2167                           
  2168                           ;main.c: 135:             set_time(key);
  2169  0306  2B3B               	goto	l2608
  2170  0307                     l2592:	
  2171                           
  2172                           ;main.c: 137:         case 0x04:
  2173  0307  120A  158A  275D  120A  118A  	fcall	_cooking_operations
  2174                           
  2175                           ;main.c: 138:             break;
  2176  030C  2B5A               	goto	l2610
  2177  030D                     l2594:	
  2178                           
  2179                           ;main.c: 141:             TMR2ON = 0;
  2180  030D  120A  118A  2204  120A  118A  	fcall	_time_display
  2181                           
  2182                           ;main.c: 142:             RC2 = 0;
  2183  0312  2B5A               	goto	l2610
  2184  0313                     l2596:	
  2185                           
  2186                           ;main.c: 144:         case 0x08:
  2187  0313  01F3               	clrf	clcd_write@mode
  2188  0314  300C               	movlw	12
  2189  0315  120A  158A  2727  120A  118A  	fcall	_clcd_write
  2190  031A                     l2598:	
  2191                           
  2192                           ;main.c: 145: 
  2193  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2194  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2195  031C  083D               	movf	operation_call@key,w
  2196  031D  120A  118A  2028  120A  118A  	fcall	_set_time
  2197                           
  2198                           ;main.c: 146:             TMR2ON = 0;
  2199  0322  2B5A               	goto	l2610
  2200  0323                     l2600:	
  2201                           
  2202                           ;main.c: 148:             clear_display();
  2203  0323  083D               	movf	operation_call@key,w
  2204  0324  120A  118A  2028  120A  118A  	fcall	_set_time
  2205                           
  2206                           ;main.c: 149:             operation_mode = 0x01;
  2207  0329  2B5A               	goto	l2610
  2208  032A                     l108:	
  2209                           ;main.c: 152:     reset_flag = 0xF0;
  2210                           
  2211                           
  2212                           ;main.c: 154: void set_time(unsigned char key){
  2213  032A  1112               	bcf	18,2	;volatile
  2214                           
  2215                           ;main.c: 155:     static int blink, wait, blink_posi, key_count;
  2216  032B  1107               	bcf	7,2	;volatile
  2217                           
  2218                           ;main.c: 156:     if(reset_flag >= 0x11){
  2219  032C  2B5A               	goto	l2610
  2220  032D                     l109:	
  2221                           ;main.c: 157:         key = 0xFF;
  2222                           
  2223                           
  2224                           ;main.c: 159:         sec = 0, min = 0;
  2225  032D  1112               	bcf	18,2	;volatile
  2226                           
  2227                           ;main.c: 160:         blink = 0;
  2228  032E  1107               	bcf	7,2	;volatile
  2229  032F                     l2602:	
  2230                           
  2231                           ;main.c: 161:         blink_posi = 0;
  2232  032F  120A  158A  265E  120A  118A  	fcall	_clear_display
  2233  0334                     l2604:	
  2234                           
  2235                           ;main.c: 162:         clcd_print("SET TIME <MM:SS>",(0x80 + 0));
  2236  0334  3001               	movlw	1
  2237  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0337  00AE               	movwf	_operation_mode
  2240  0338  3000               	movlw	0
  2241  0339  00AF               	movwf	_operation_mode+1
  2242                           
  2243                           ;main.c: 163:         clcd_print("TIME- 00:00",(0xC0 + 0));
  2244  033A  2B5A               	goto	l2610
  2245  033B                     l2608:	
  2246                           
  2247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2248                           ; Switch size 1, requested type "simple"
  2249                           ; Number of cases is 1, Range of values is 0 to 0
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte            4     3 (average)
  2253                           ; direct_byte           11     8 (fixed)
  2254                           ; jumptable            260     6 (fixed)
  2255                           ;	Chosen strategy is simple_byte
  2256  033B  082F               	movf	_operation_mode+1,w
  2257  033C  3A00               	xorlw	0	; case 0
  2258  033D  1903               	skipnz
  2259  033E  2B40               	goto	l2746
  2260  033F  2B5A               	goto	l2610
  2261  0340                     l2746:	
  2262                           
  2263                           ; Switch size 1, requested type "simple"
  2264                           ; Number of cases is 8, Range of values is 1 to 8
  2265                           ; switch strategies available:
  2266                           ; Name         Instructions Cycles
  2267                           ; simple_byte           25    13 (average)
  2268                           ; direct_byte           35    11 (fixed)
  2269                           ; jumptable            263     9 (fixed)
  2270                           ;	Chosen strategy is simple_byte
  2271  0340  082E               	movf	_operation_mode,w
  2272  0341  3A01               	xorlw	1	; case 1
  2273  0342  1903               	skipnz
  2274  0343  2B07               	goto	l2592
  2275  0344  3A03               	xorlw	3	; case 2
  2276  0345  1903               	skipnz
  2277  0346  2B13               	goto	l2596
  2278  0347  3A01               	xorlw	1	; case 3
  2279  0348  1903               	skipnz
  2280  0349  2B23               	goto	l2600
  2281  034A  3A07               	xorlw	7	; case 4
  2282  034B  1903               	skipnz
  2283  034C  2B5A               	goto	l2610
  2284  034D  3A01               	xorlw	1	; case 5
  2285  034E  1903               	skipnz
  2286  034F  2B0D               	goto	l2594
  2287  0350  3A03               	xorlw	3	; case 6
  2288  0351  1903               	skipnz
  2289  0352  2B0D               	goto	l2594
  2290  0353  3A01               	xorlw	1	; case 7
  2291  0354  1903               	skipnz
  2292  0355  2B2A               	goto	l108
  2293  0356  3A0F               	xorlw	15	; case 8
  2294  0357  1903               	skipnz
  2295  0358  2B2D               	goto	l109
  2296  0359  2B5A               	goto	l2610
  2297  035A                     l2610:	
  2298                           
  2299                           ;main.c: 165:     }
  2300  035A  30F0               	movlw	240
  2301  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2302  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2303  035D  00AC               	movwf	_reset_flag
  2304  035E  3000               	movlw	0
  2305  035F  00AD               	movwf	_reset_flag+1
  2306  0360                     l110:	
  2307  0360  0008               	return
  2308  0361                     __end_of_operation_call:	
  2309                           
  2310                           	psect	text5
  2311  0204                     __ptext5:	
  2312 ;; *************** function _time_display *****************
  2313 ;; Defined at:
  2314 ;;		line 268 in file "main.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          0       3       0       0       0
  2331 ;;      Totals:         0       3       0       0       0
  2332 ;;Total ram usage:        3 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    4
  2335 ;; This function calls:
  2336 ;;		___awdiv
  2337 ;;		___awmod
  2338 ;;		_clcd_print
  2339 ;;		_clcd_putch
  2340 ;;		_clear_display
  2341 ;;		_door_status_check
  2342 ;; This function is called by:
  2343 ;;		_operation_call
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _time_display
  2349  0204                     _time_display:	
  2350  0204                     l2398:	
  2351                           ;incstack = 0
  2352                           ; Regs used in _time_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2353                           
  2354                           
  2355                           ;main.c: 270:     clcd_print(sec_arr,(0x80 + 11));
  2356  0204  120A  118A  23BC  120A  118A  	fcall	_door_status_check
  2357                           
  2358                           ;main.c: 271: 
  2359  0209  30C3               	movlw	low (STR_15| (0+32768))
  2360  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2361  020B  1303               	bcf	3,6	;RP1=0, select bank0
  2362  020C  00B6               	movwf	clcd_print@str
  2363  020D  3084               	movlw	high (STR_15| (0+32768))
  2364  020E  00B7               	movwf	clcd_print@str+1
  2365  020F  3080               	movlw	128
  2366  0210  00BA               	movwf	??_time_display
  2367  0211  083A               	movf	??_time_display,w
  2368  0212  00B8               	movwf	clcd_print@addr
  2369  0213  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2370  0218                     l2400:	
  2371                           
  2372                           ;main.c: 273:     clcd_print(" 5.Pause             ",(0x90 + 0));
  2373  0218  300A               	movlw	10
  2374  0219  00F3               	movwf	___awdiv@divisor
  2375  021A  3000               	movlw	0
  2376  021B  00F4               	movwf	___awdiv@divisor+1
  2377  021C  0879               	movf	_min+1,w
  2378  021D  00F6               	movwf	___awdiv@dividend+1
  2379  021E  0878               	movf	_min,w
  2380  021F  00F5               	movwf	___awdiv@dividend
  2381  0220  120A  118A  270D  120A  118A  	fcall	___awdiv
  2382  0225  0873               	movf	?___awdiv,w
  2383  0226  3E30               	addlw	48
  2384  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0229  00BA               	movwf	??_time_display
  2387  022A  083A               	movf	??_time_display,w
  2388  022B  00B3               	movwf	_min_arr
  2389  022C                     l2402:	
  2390                           
  2391                           ;main.c: 274:     clcd_print(" 6.Stop              ",(0xD0 + 0));
  2392  022C  300A               	movlw	10
  2393  022D  00F3               	movwf	___awmod@divisor
  2394  022E  3000               	movlw	0
  2395  022F  00F4               	movwf	___awmod@divisor+1
  2396  0230  0879               	movf	_min+1,w
  2397  0231  00F6               	movwf	___awmod@dividend+1
  2398  0232  0878               	movf	_min,w
  2399  0233  00F5               	movwf	___awmod@dividend
  2400  0234  120A  118A  2361  120A  118A  	fcall	___awmod
  2401  0239  0873               	movf	?___awmod,w
  2402  023A  3E30               	addlw	48
  2403  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2404  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2405  023D  00BA               	movwf	??_time_display
  2406  023E  083A               	movf	??_time_display,w
  2407  023F  00B4               	movwf	_min_arr+1
  2408  0240                     l2404:	
  2409                           
  2410                           ;main.c: 275: 
  2411  0240  01B5               	clrf	_min_arr+2
  2412  0241                     l2406:	
  2413                           
  2414                           ;main.c: 276: 
  2415  0241  3033               	movlw	(low (_min_arr| 0))& (0+255)
  2416  0242  00B6               	movwf	clcd_print@str
  2417  0243  3000               	movlw	0
  2418  0244  00B7               	movwf	clcd_print@str+1
  2419  0245  3088               	movlw	136
  2420  0246  00BA               	movwf	??_time_display
  2421  0247  083A               	movf	??_time_display,w
  2422  0248  00B8               	movwf	clcd_print@addr
  2423  0249  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2424  024E                     l2408:	
  2425                           
  2426                           ;main.c: 278:     {
  2427  024E  308A               	movlw	138
  2428  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0251  00BA               	movwf	??_time_display
  2431  0252  083A               	movf	??_time_display,w
  2432  0253  00F7               	movwf	clcd_putch@addr
  2433  0254  30F2               	movlw	(low (STR_16| (0+32768)))& (0+255)
  2434  0255  120A  158A  2696  120A  118A  	fcall	_clcd_putch
  2435  025A                     l2410:	
  2436                           
  2437                           ;main.c: 280:         RC2 = 0;
  2438  025A  300A               	movlw	10
  2439  025B  00F3               	movwf	___awdiv@divisor
  2440  025C  3000               	movlw	0
  2441  025D  00F4               	movwf	___awdiv@divisor+1
  2442  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2443  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0260  082B               	movf	_sec+1,w
  2445  0261  00F6               	movwf	___awdiv@dividend+1
  2446  0262  082A               	movf	_sec,w
  2447  0263  00F5               	movwf	___awdiv@dividend
  2448  0264  120A  118A  270D  120A  118A  	fcall	___awdiv
  2449  0269  0873               	movf	?___awdiv,w
  2450  026A  3E30               	addlw	48
  2451  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2452  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2453  026D  00BA               	movwf	??_time_display
  2454  026E  083A               	movf	??_time_display,w
  2455  026F  00B0               	movwf	_sec_arr
  2456  0270                     l2412:	
  2457                           
  2458                           ;main.c: 281:         clear_display();
  2459  0270  300A               	movlw	10
  2460  0271  00F3               	movwf	___awmod@divisor
  2461  0272  3000               	movlw	0
  2462  0273  00F4               	movwf	___awmod@divisor+1
  2463  0274  082B               	movf	_sec+1,w
  2464  0275  00F6               	movwf	___awmod@dividend+1
  2465  0276  082A               	movf	_sec,w
  2466  0277  00F5               	movwf	___awmod@dividend
  2467  0278  120A  118A  2361  120A  118A  	fcall	___awmod
  2468  027D  0873               	movf	?___awmod,w
  2469  027E  3E30               	addlw	48
  2470  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0281  00BA               	movwf	??_time_display
  2473  0282  083A               	movf	??_time_display,w
  2474  0283  00B1               	movwf	_sec_arr+1
  2475  0284                     l2414:	
  2476                           
  2477                           ;main.c: 282:         clcd_print("COOKING TIME UP",(0x80 + 0));
  2478  0284  01B2               	clrf	_sec_arr+2
  2479  0285                     l2416:	
  2480                           
  2481                           ;main.c: 283: 
  2482  0285  3030               	movlw	(low (_sec_arr| 0))& (0+255)
  2483  0286  00B6               	movwf	clcd_print@str
  2484  0287  3000               	movlw	0
  2485  0288  00B7               	movwf	clcd_print@str+1
  2486  0289  308B               	movlw	139
  2487  028A  00BA               	movwf	??_time_display
  2488  028B  083A               	movf	??_time_display,w
  2489  028C  00B8               	movwf	clcd_print@addr
  2490  028D  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2491  0292                     l2418:	
  2492                           
  2493                           ;main.c: 285:         RC1 = 1;
  2494  0292  302C               	movlw	low (STR_17| (0+32768))
  2495  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0295  00B6               	movwf	clcd_print@str
  2498  0296  3084               	movlw	high (STR_17| (0+32768))
  2499  0297  00B7               	movwf	clcd_print@str+1
  2500  0298  30C0               	movlw	192
  2501  0299  00BA               	movwf	??_time_display
  2502  029A  083A               	movf	??_time_display,w
  2503  029B  00B8               	movwf	clcd_print@addr
  2504  029C  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2505  02A1                     l2420:	
  2506                           
  2507                           ;main.c: 286:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  2508  02A1  3016               	movlw	low (STR_18| (0+32768))
  2509  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2510  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2511  02A4  00B6               	movwf	clcd_print@str
  2512  02A5  3084               	movlw	high (STR_18| (0+32768))
  2513  02A6  00B7               	movwf	clcd_print@str+1
  2514  02A7  3090               	movlw	144
  2515  02A8  00BA               	movwf	??_time_display
  2516  02A9  083A               	movf	??_time_display,w
  2517  02AA  00B8               	movwf	clcd_print@addr
  2518  02AB  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2519  02B0                     l2422:	
  2520                           
  2521                           ;main.c: 287: 
  2522  02B0  3000               	movlw	low (STR_19| (0+32768))
  2523  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2524  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2525  02B3  00B6               	movwf	clcd_print@str
  2526  02B4  3084               	movlw	high (STR_19| (0+32768))
  2527  02B5  00B7               	movwf	clcd_print@str+1
  2528  02B6  30D0               	movlw	208
  2529  02B7  00BA               	movwf	??_time_display
  2530  02B8  083A               	movf	??_time_display,w
  2531  02B9  00B8               	movwf	clcd_print@addr
  2532  02BA  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2533  02BF                     l2424:	
  2534                           
  2535                           ;main.c: 290:         operation_mode = 0x01;
  2536  02BF  0878               	movf	_min,w
  2537  02C0  0479               	iorwf	_min+1,w
  2538  02C1  1D03               	btfss	3,2
  2539  02C2  2AC4               	goto	u2001
  2540  02C3  2AC5               	goto	u2000
  2541  02C4                     u2001:	
  2542  02C4  2B02               	goto	l149
  2543  02C5                     u2000:	
  2544  02C5                     l2426:	
  2545  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2546  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2547  02C7  082A               	movf	_sec,w
  2548  02C8  042B               	iorwf	_sec+1,w
  2549  02C9  1D03               	btfss	3,2
  2550  02CA  2ACC               	goto	u2011
  2551  02CB  2ACD               	goto	u2010
  2552  02CC                     u2011:	
  2553  02CC  2B02               	goto	l149
  2554  02CD                     u2010:	
  2555  02CD                     l2428:	
  2556                           
  2557                           ;main.c: 291: ;main.c: 292:     }
  2558  02CD  1112               	bcf	18,2	;volatile
  2559                           
  2560                           ;main.c: 293: 
  2561  02CE  1107               	bcf	7,2	;volatile
  2562  02CF                     l2430:	
  2563                           
  2564                           ;main.c: 294: 
  2565  02CF  120A  158A  265E  120A  118A  	fcall	_clear_display
  2566  02D4                     l2432:	
  2567                           
  2568                           ;main.c: 295: }
  2569  02D4  3064               	movlw	low (STR_20| (0+32768))
  2570  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2571  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2572  02D7  00B6               	movwf	clcd_print@str
  2573  02D8  3084               	movlw	high (STR_20| (0+32768))
  2574  02D9  00B7               	movwf	clcd_print@str+1
  2575  02DA  3080               	movlw	128
  2576  02DB  00BA               	movwf	??_time_display
  2577  02DC  083A               	movf	??_time_display,w
  2578  02DD  00B8               	movwf	clcd_print@addr
  2579  02DE  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2580  02E3                     l2434:	
  2581  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2582  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2583  02E5  1487               	bsf	7,1	;volatile
  2584  02E6                     l2436:	
  2585  02E6  3033               	movlw	51
  2586  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2587  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2588  02E9  00BC               	movwf	??_time_display+2
  2589  02EA  30BB               	movlw	187
  2590  02EB  00BB               	movwf	??_time_display+1
  2591  02EC  30DF               	movlw	223
  2592  02ED  00BA               	movwf	??_time_display
  2593  02EE                     u2337:	
  2594  02EE  0BBA               	decfsz	??_time_display,f
  2595  02EF  2AEE               	goto	u2337
  2596  02F0  0BBB               	decfsz	??_time_display+1,f
  2597  02F1  2AEE               	goto	u2337
  2598  02F2  0BBC               	decfsz	??_time_display+2,f
  2599  02F3  2AEE               	goto	u2337
  2600  02F4                     l2438:	
  2601  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2602  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2603  02F6  1087               	bcf	7,1	;volatile
  2604  02F7                     l2440:	
  2605  02F7  120A  158A  265E  120A  118A  	fcall	_clear_display
  2606  02FC                     l2442:	
  2607  02FC  3001               	movlw	1
  2608  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2609  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2610  02FF  00AE               	movwf	_operation_mode
  2611  0300  3000               	movlw	0
  2612  0301  00AF               	movwf	_operation_mode+1
  2613  0302                     l149:	
  2614  0302  0008               	return
  2615  0303                     __end_of_time_display:	
  2616                           
  2617                           	psect	text6
  2618  03BC                     __ptext6:	
  2619 ;; *************** function _door_status_check *****************
  2620 ;; Defined at:
  2621 ;;		line 245 in file "main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0
  2637 ;;      Temps:          1       0       0       0       0
  2638 ;;      Totals:         1       0       0       0       0
  2639 ;;Total ram usage:        1 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		_clcd_print
  2644 ;;		_clear_display
  2645 ;; This function is called by:
  2646 ;;		_time_display
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _door_status_check
  2652  03BC                     _door_status_check:	
  2653  03BC                     l2252:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _door_status_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2656                           
  2657                           
  2658                           ;main.c: 248: 
  2659  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2660  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2661  03BE  1986               	btfsc	6,3	;volatile
  2662  03BF  2BC1               	goto	u1751
  2663  03C0  2BC2               	goto	u1750
  2664  03C1                     u1751:	
  2665  03C1  2BF3               	goto	l2264
  2666  03C2                     u1750:	
  2667  03C2                     l2254:	
  2668                           
  2669                           ;main.c: 249:     };main.c: 250:     TMR2ON = 1;
  2670  03C2  1487               	bsf	7,1	;volatile
  2671                           
  2672                           ;main.c: 251:     RC1 = 0;
  2673  03C3  1107               	bcf	7,2	;volatile
  2674                           
  2675                           ;main.c: 252:     RC2 = 1;
  2676  03C4  1112               	bcf	18,2	;volatile
  2677  03C5                     l2256:	
  2678                           
  2679                           ;main.c: 253: 
  2680  03C5  120A  158A  265E  120A  118A  	fcall	_clear_display
  2681  03CA                     l2258:	
  2682                           
  2683                           ;main.c: 254: }
  2684  03CA  30CD               	movlw	low (STR_13| (0+32768))
  2685  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2686  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2687  03CD  00B6               	movwf	clcd_print@str
  2688  03CE  3084               	movlw	high (STR_13| (0+32768))
  2689  03CF  00B7               	movwf	clcd_print@str+1
  2690  03D0  30C2               	movlw	194
  2691  03D1  00F7               	movwf	??_door_status_check
  2692  03D2  0877               	movf	??_door_status_check,w
  2693  03D3  00B8               	movwf	clcd_print@addr
  2694  03D4  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2695  03D9                     l2260:	
  2696                           
  2697                           ;main.c: 255: void time_display(void)
  2698  03D9  309E               	movlw	low (STR_14| (0+32768))
  2699  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2700  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2701  03DC  00B6               	movwf	clcd_print@str
  2702  03DD  3084               	movlw	high (STR_14| (0+32768))
  2703  03DE  00B7               	movwf	clcd_print@str+1
  2704  03DF  3092               	movlw	146
  2705  03E0  00F7               	movwf	??_door_status_check
  2706  03E1  0877               	movf	??_door_status_check,w
  2707  03E2  00B8               	movwf	clcd_print@addr
  2708  03E3  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2709  03E8                     l142:	
  2710                           ;main.c: 257:     door_status_check();;main.c: 259: 
  2711                           
  2712                           
  2713                           ;main.c: 256: {
  2714  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2715  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2716  03EA  1D86               	btfss	6,3	;volatile
  2717  03EB  2BED               	goto	u1761
  2718  03EC  2BEE               	goto	u1760
  2719  03ED                     u1761:	
  2720  03ED  2BE8               	goto	l142
  2721  03EE                     u1760:	
  2722  03EE                     l2262:	
  2723                           
  2724                           ;main.c: 260:     min_arr[0] = min/10 + '0';
  2725  03EE  120A  158A  265E  120A  118A  	fcall	_clear_display
  2726  03F3                     l2264:	
  2727                           
  2728                           ;main.c: 263:     clcd_print(min_arr,(0x80 + 8));
  2729  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2730  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2731  03F5  1512               	bsf	18,2	;volatile
  2732  03F6                     l2266:	
  2733                           
  2734                           ;main.c: 264: 
  2735  03F6  1087               	bcf	7,1	;volatile
  2736  03F7                     l2268:	
  2737                           
  2738                           ;main.c: 265:     clcd_putch(":",(0x80 + 10));
  2739  03F7  1507               	bsf	7,2	;volatile
  2740  03F8                     l145:	
  2741  03F8  0008               	return
  2742  03F9                     __end_of_door_status_check:	
  2743                           
  2744                           	psect	text7
  2745  0E96                     __ptext7:	
  2746 ;; *************** function _clcd_putch *****************
  2747 ;; Defined at:
  2748 ;;		line 55 in file "clcd.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  data            1    wreg     const unsigned char 
  2751 ;;  addr            1    7[COMMON] unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  data            1    0[BANK0 ] const unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, pclath, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2763 ;;      Params:         1       0       0       0       0
  2764 ;;      Locals:         0       1       0       0       0
  2765 ;;      Temps:          0       0       0       0       0
  2766 ;;      Totals:         1       1       0       0       0
  2767 ;;Total ram usage:        2 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    2
  2770 ;; This function calls:
  2771 ;;		_clcd_write
  2772 ;; This function is called by:
  2773 ;;		_power_on_screen
  2774 ;;		_time_display
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function _clcd_putch
  2780  0E96                     _clcd_putch:	
  2781                           
  2782                           ;incstack = 0
  2783                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2784                           ;clcd_putch@data stored from wreg
  2785  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0E98  00B6               	movwf	clcd_putch@data
  2788  0E99                     l2250:	
  2789                           
  2790                           ;clcd.c: 55: void clcd_putch(const char data, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
  2791  0E99  01F3               	clrf	clcd_write@mode
  2792  0E9A  0877               	movf	clcd_putch@addr,w
  2793  0E9B  120A  158A  2727  120A  158A  	fcall	_clcd_write
  2794                           
  2795                           ;clcd.c: 58:     clcd_write(data, 1);
  2796  0EA0  01F3               	clrf	clcd_write@mode
  2797  0EA1  0AF3               	incf	clcd_write@mode,f
  2798  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0EA4  0836               	movf	clcd_putch@data,w
  2801  0EA5  120A  158A  2727  120A  158A  	fcall	_clcd_write
  2802  0EAA                     l175:	
  2803  0EAA  0008               	return
  2804  0EAB                     __end_of_clcd_putch:	
  2805                           
  2806                           	psect	text8
  2807  0028                     __ptext8:	
  2808 ;; *************** function _set_time *****************
  2809 ;; Defined at:
  2810 ;;		line 167 in file "main.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  key             1    wreg     unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  key             1    6[BANK0 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       0
  2825 ;;      Locals:         0       1       0       0       0
  2826 ;;      Temps:          0       2       0       0       0
  2827 ;;      Totals:         0       3       0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    3
  2831 ;; This function calls:
  2832 ;;		___awdiv
  2833 ;;		___awmod
  2834 ;;		___wmul
  2835 ;;		_clcd_print
  2836 ;;		_clear_display
  2837 ;; This function is called by:
  2838 ;;		_operation_call
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _set_time
  2844  0028                     _set_time:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2848                           ;set_time@key stored from wreg
  2849  0028  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0029  1303               	bcf	3,6	;RP1=0, select bank0
  2851  002A  00BC               	movwf	set_time@key
  2852  002B                     l2444:	
  2853                           
  2854                           ;main.c: 168: ;main.c: 169:         key_count++;
  2855  002B  082D               	movf	_reset_flag+1,w
  2856  002C  3A80               	xorlw	128
  2857  002D  00FF               	movwf	btemp+1
  2858  002E  3080               	movlw	128
  2859  002F  027F               	subwf	btemp+1,w
  2860  0030  1D03               	skipz
  2861  0031  2834               	goto	u2025
  2862  0032  3011               	movlw	17
  2863  0033  022C               	subwf	_reset_flag,w
  2864  0034                     u2025:	
  2865  0034  1C03               	skipc
  2866  0035  2837               	goto	u2021
  2867  0036  2838               	goto	u2020
  2868  0037                     u2021:	
  2869  0037  2873               	goto	l2464
  2870  0038                     u2020:	
  2871  0038                     l2446:	
  2872                           
  2873                           ;main.c: 170:         if(key_count<=2)
  2874  0038  30FF               	movlw	255
  2875  0039  1283               	bcf	3,5	;RP0=0, select bank0
  2876  003A  1303               	bcf	3,6	;RP1=0, select bank0
  2877  003B  00BA               	movwf	??_set_time
  2878  003C  083A               	movf	??_set_time,w
  2879  003D  00BC               	movwf	set_time@key
  2880  003E                     l2448:	
  2881                           
  2882                           ;main.c: 171:         {
  2883  003E  01A2               	clrf	set_time@key_count
  2884  003F  01A3               	clrf	set_time@key_count+1
  2885  0040                     l2450:	
  2886                           
  2887                           ;main.c: 172:             sec = sec*10 + key;
  2888  0040  01AA               	clrf	_sec
  2889  0041  01AB               	clrf	_sec+1
  2890  0042                     l2452:	
  2891  0042  01F8               	clrf	_min
  2892  0043  01F9               	clrf	_min+1
  2893  0044                     l2454:	
  2894                           
  2895                           ;main.c: 173:             blink_posi = 0;
  2896  0044  01A8               	clrf	set_time@blink
  2897  0045  01A9               	clrf	set_time@blink+1
  2898  0046                     l2456:	
  2899                           
  2900                           ;main.c: 174:         }
  2901  0046  01A4               	clrf	set_time@blink_posi
  2902  0047  01A5               	clrf	set_time@blink_posi+1
  2903  0048                     l2458:	
  2904                           
  2905                           ;main.c: 175:         else if(key_count>2 && key_count<5)
  2906  0048  3042               	movlw	low (STR_8| (0+32768))
  2907  0049  00B6               	movwf	clcd_print@str
  2908  004A  3084               	movlw	high (STR_8| (0+32768))
  2909  004B  00B7               	movwf	clcd_print@str+1
  2910  004C  3080               	movlw	128
  2911  004D  00BA               	movwf	??_set_time
  2912  004E  083A               	movf	??_set_time,w
  2913  004F  00B8               	movwf	clcd_print@addr
  2914  0050  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2915  0055                     l2460:	
  2916                           
  2917                           ;main.c: 176:         {
  2918  0055  30AB               	movlw	low (STR_9| (0+32768))
  2919  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0058  00B6               	movwf	clcd_print@str
  2922  0059  3084               	movlw	high (STR_9| (0+32768))
  2923  005A  00B7               	movwf	clcd_print@str+1
  2924  005B  30C0               	movlw	192
  2925  005C  00BA               	movwf	??_set_time
  2926  005D  083A               	movf	??_set_time,w
  2927  005E  00B8               	movwf	clcd_print@addr
  2928  005F  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2929  0064                     l2462:	
  2930                           
  2931                           ;main.c: 177:             min = min*10 + key;
  2932  0064  3053               	movlw	low (STR_10| (0+32768))
  2933  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0067  00B6               	movwf	clcd_print@str
  2936  0068  3084               	movlw	high (STR_10| (0+32768))
  2937  0069  00B7               	movwf	clcd_print@str+1
  2938  006A  30D0               	movlw	208
  2939  006B  00BA               	movwf	??_set_time
  2940  006C  083A               	movf	??_set_time,w
  2941  006D  00B8               	movwf	clcd_print@addr
  2942  006E  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  2943  0073                     l2464:	
  2944                           
  2945                           ;main.c: 179:         }
  2946  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0075  0A3C               	incf	set_time@key,w
  2949  0076  1903               	btfsc	3,2
  2950  0077  2879               	goto	u2031
  2951  0078  287A               	goto	u2030
  2952  0079                     u2031:	
  2953  0079  28EE               	goto	l2486
  2954  007A                     u2030:	
  2955  007A                     l2466:	
  2956  007A  302A               	movlw	42
  2957  007B  063C               	xorwf	set_time@key,w
  2958  007C  1903               	btfsc	3,2
  2959  007D  287F               	goto	u2041
  2960  007E  2880               	goto	u2040
  2961  007F                     u2041:	
  2962  007F  28EE               	goto	l2486
  2963  0080                     u2040:	
  2964  0080                     l2468:	
  2965  0080  3023               	movlw	35
  2966  0081  063C               	xorwf	set_time@key,w
  2967  0082  1903               	btfsc	3,2
  2968  0083  2885               	goto	u2051
  2969  0084  2886               	goto	u2050
  2970  0085                     u2051:	
  2971  0085  28EE               	goto	l2486
  2972  0086                     u2050:	
  2973  0086                     l2470:	
  2974                           
  2975                           ;main.c: 180: ;main.c: 182:     if(key == '*')
  2976  0086  3001               	movlw	1
  2977  0087  07A2               	addwf	set_time@key_count,f
  2978  0088  1803               	skipnc
  2979  0089  0AA3               	incf	set_time@key_count+1,f
  2980  008A  3000               	movlw	0
  2981  008B  07A3               	addwf	set_time@key_count+1,f
  2982  008C                     l2472:	
  2983                           
  2984                           ;main.c: 183:     {
  2985  008C  0823               	movf	set_time@key_count+1,w
  2986  008D  3A80               	xorlw	128
  2987  008E  00FF               	movwf	btemp+1
  2988  008F  3080               	movlw	128
  2989  0090  027F               	subwf	btemp+1,w
  2990  0091  1D03               	skipz
  2991  0092  2895               	goto	u2065
  2992  0093  3003               	movlw	3
  2993  0094  0222               	subwf	set_time@key_count,w
  2994  0095                     u2065:	
  2995  0095  1803               	skipnc
  2996  0096  2898               	goto	u2061
  2997  0097  2899               	goto	u2060
  2998  0098                     u2061:	
  2999  0098  28B5               	goto	l2478
  3000  0099                     u2060:	
  3001  0099                     l2474:	
  3002                           
  3003                           ;main.c: 184:         if(key_count<=2);main.c: 185:         {
  3004  0099  1283               	bcf	3,5	;RP0=0, select bank0
  3005  009A  1303               	bcf	3,6	;RP1=0, select bank0
  3006  009B  082B               	movf	_sec+1,w
  3007  009C  00F4               	movwf	___wmul@multiplier+1
  3008  009D  082A               	movf	_sec,w
  3009  009E  00F3               	movwf	___wmul@multiplier
  3010  009F  300A               	movlw	10
  3011  00A0  00F5               	movwf	___wmul@multiplicand
  3012  00A1  3000               	movlw	0
  3013  00A2  00F6               	movwf	___wmul@multiplicand+1
  3014  00A3  120A  158A  26C9  120A  118A  	fcall	___wmul
  3015  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  3016  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  3017  00AA  083C               	movf	set_time@key,w
  3018  00AB  0773               	addwf	?___wmul,w
  3019  00AC  00AA               	movwf	_sec
  3020  00AD  3000               	movlw	0
  3021  00AE  1803               	skipnc
  3022  00AF  3001               	movlw	1
  3023  00B0  0774               	addwf	?___wmul+1,w
  3024  00B1  00AB               	movwf	_sec+1
  3025  00B2                     l2476:	
  3026                           
  3027                           ;main.c: 186:             sec = 0;
  3028  00B2  01A4               	clrf	set_time@blink_posi
  3029  00B3  01A5               	clrf	set_time@blink_posi+1
  3030                           
  3031                           ;main.c: 187:             key_count = 0;
  3032  00B4  28EE               	goto	l2486
  3033  00B5                     l2478:	
  3034  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  3035  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  3036  00B7  0823               	movf	set_time@key_count+1,w
  3037  00B8  3A80               	xorlw	128
  3038  00B9  00FF               	movwf	btemp+1
  3039  00BA  3080               	movlw	128
  3040  00BB  027F               	subwf	btemp+1,w
  3041  00BC  1D03               	skipz
  3042  00BD  28C0               	goto	u2075
  3043  00BE  3003               	movlw	3
  3044  00BF  0222               	subwf	set_time@key_count,w
  3045  00C0                     u2075:	
  3046  00C0  1C03               	skipc
  3047  00C1  28C3               	goto	u2071
  3048  00C2  28C4               	goto	u2070
  3049  00C3                     u2071:	
  3050  00C3  28EE               	goto	l2486
  3051  00C4                     u2070:	
  3052  00C4                     l2480:	
  3053  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3054  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3055  00C6  0823               	movf	set_time@key_count+1,w
  3056  00C7  3A80               	xorlw	128
  3057  00C8  00FF               	movwf	btemp+1
  3058  00C9  3080               	movlw	128
  3059  00CA  027F               	subwf	btemp+1,w
  3060  00CB  1D03               	skipz
  3061  00CC  28CF               	goto	u2085
  3062  00CD  3005               	movlw	5
  3063  00CE  0222               	subwf	set_time@key_count,w
  3064  00CF                     u2085:	
  3065  00CF  1803               	skipnc
  3066  00D0  28D2               	goto	u2081
  3067  00D1  28D3               	goto	u2080
  3068  00D2                     u2081:	
  3069  00D2  28EE               	goto	l2486
  3070  00D3                     u2080:	
  3071  00D3                     l2482:	
  3072                           
  3073                           ;main.c: 189:         else if(key_count>2 && key_count<5);main.c: 190:         {
  3074  00D3  0879               	movf	_min+1,w
  3075  00D4  00F4               	movwf	___wmul@multiplier+1
  3076  00D5  0878               	movf	_min,w
  3077  00D6  00F3               	movwf	___wmul@multiplier
  3078  00D7  300A               	movlw	10
  3079  00D8  00F5               	movwf	___wmul@multiplicand
  3080  00D9  3000               	movlw	0
  3081  00DA  00F6               	movwf	___wmul@multiplicand+1
  3082  00DB  120A  158A  26C9  120A  118A  	fcall	___wmul
  3083  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  3084  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  3085  00E2  083C               	movf	set_time@key,w
  3086  00E3  0773               	addwf	?___wmul,w
  3087  00E4  00F8               	movwf	_min
  3088  00E5  3000               	movlw	0
  3089  00E6  1803               	skipnc
  3090  00E7  3001               	movlw	1
  3091  00E8  0774               	addwf	?___wmul+1,w
  3092  00E9  00F9               	movwf	_min+1
  3093  00EA                     l2484:	
  3094                           
  3095                           ;main.c: 191:             min = 0;
  3096  00EA  3001               	movlw	1
  3097  00EB  00A4               	movwf	set_time@blink_posi
  3098  00EC  3000               	movlw	0
  3099  00ED  00A5               	movwf	set_time@blink_posi+1
  3100  00EE                     l2486:	
  3101                           
  3102                           ;main.c: 195:     else if(key == '#')
  3103  00EE  302A               	movlw	42
  3104  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3105  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3106  00F1  063C               	xorwf	set_time@key,w
  3107  00F2  1D03               	btfss	3,2
  3108  00F3  28F5               	goto	u2091
  3109  00F4  28F6               	goto	u2090
  3110  00F5                     u2091:	
  3111  00F5  2931               	goto	l2500
  3112  00F6                     u2090:	
  3113  00F6                     l2488:	
  3114                           
  3115                           ;main.c: 196:     {;main.c: 197: 
  3116  00F6  0823               	movf	set_time@key_count+1,w
  3117  00F7  3A80               	xorlw	128
  3118  00F8  00FF               	movwf	btemp+1
  3119  00F9  3080               	movlw	128
  3120  00FA  027F               	subwf	btemp+1,w
  3121  00FB  1D03               	skipz
  3122  00FC  28FF               	goto	u2105
  3123  00FD  3003               	movlw	3
  3124  00FE  0222               	subwf	set_time@key_count,w
  3125  00FF                     u2105:	
  3126  00FF  1803               	skipnc
  3127  0100  2902               	goto	u2101
  3128  0101  2903               	goto	u2100
  3129  0102                     u2101:	
  3130  0102  290A               	goto	l2492
  3131  0103                     u2100:	
  3132  0103                     l2490:	
  3133                           
  3134                           ;main.c: 198:         clear_display();;main.c: 199:         TMR2ON = 1;
  3135  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0105  01AA               	clrf	_sec
  3138  0106  01AB               	clrf	_sec+1
  3139                           
  3140                           ;main.c: 200:         RC2 = 1;
  3141  0107  01A2               	clrf	set_time@key_count
  3142  0108  01A3               	clrf	set_time@key_count+1
  3143                           
  3144                           ;main.c: 201:         operation_mode = 0x06;
  3145  0109  2944               	goto	l2510
  3146  010A                     l2492:	
  3147  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3148  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3149  010C  0823               	movf	set_time@key_count+1,w
  3150  010D  3A80               	xorlw	128
  3151  010E  00FF               	movwf	btemp+1
  3152  010F  3080               	movlw	128
  3153  0110  027F               	subwf	btemp+1,w
  3154  0111  1D03               	skipz
  3155  0112  2915               	goto	u2115
  3156  0113  3003               	movlw	3
  3157  0114  0222               	subwf	set_time@key_count,w
  3158  0115                     u2115:	
  3159  0115  1C03               	skipc
  3160  0116  2918               	goto	u2111
  3161  0117  2919               	goto	u2110
  3162  0118                     u2111:	
  3163  0118  2944               	goto	l2510
  3164  0119                     u2110:	
  3165  0119                     l2494:	
  3166  0119  1283               	bcf	3,5	;RP0=0, select bank0
  3167  011A  1303               	bcf	3,6	;RP1=0, select bank0
  3168  011B  0823               	movf	set_time@key_count+1,w
  3169  011C  3A80               	xorlw	128
  3170  011D  00FF               	movwf	btemp+1
  3171  011E  3080               	movlw	128
  3172  011F  027F               	subwf	btemp+1,w
  3173  0120  1D03               	skipz
  3174  0121  2924               	goto	u2125
  3175  0122  3005               	movlw	5
  3176  0123  0222               	subwf	set_time@key_count,w
  3177  0124                     u2125:	
  3178  0124  1803               	skipnc
  3179  0125  2927               	goto	u2121
  3180  0126  2928               	goto	u2120
  3181  0127                     u2121:	
  3182  0127  2944               	goto	l2510
  3183  0128                     u2120:	
  3184  0128                     l2496:	
  3185                           
  3186                           ;main.c: 203: ;main.c: 204:     sec_arr[0] = sec/10 + '0';
  3187  0128  01F8               	clrf	_min
  3188  0129  01F9               	clrf	_min+1
  3189  012A                     l2498:	
  3190                           
  3191                           ;main.c: 205:     sec_arr[1] = sec%10 + '0';
  3192  012A  3002               	movlw	2
  3193  012B  1283               	bcf	3,5	;RP0=0, select bank0
  3194  012C  1303               	bcf	3,6	;RP1=0, select bank0
  3195  012D  00A2               	movwf	set_time@key_count
  3196  012E  3000               	movlw	0
  3197  012F  00A3               	movwf	set_time@key_count+1
  3198  0130  2944               	goto	l2510
  3199  0131                     l2500:	
  3200  0131  3023               	movlw	35
  3201  0132  063C               	xorwf	set_time@key,w
  3202  0133  1D03               	btfss	3,2
  3203  0134  2936               	goto	u2131
  3204  0135  2937               	goto	u2130
  3205  0136                     u2131:	
  3206  0136  2944               	goto	l2510
  3207  0137                     u2130:	
  3208  0137                     l2502:	
  3209                           
  3210                           ;main.c: 209:     min_arr[1] = min%10 + '0';;main.c: 211: 
  3211  0137  120A  158A  265E  120A  118A  	fcall	_clear_display
  3212  013C                     l2504:	
  3213                           
  3214                           ;main.c: 212: 
  3215  013C  1283               	bcf	3,5	;RP0=0, select bank0
  3216  013D  1303               	bcf	3,6	;RP1=0, select bank0
  3217  013E  1512               	bsf	18,2	;volatile
  3218  013F                     l2506:	
  3219                           
  3220                           ;main.c: 213:     if(wait++ == 50){
  3221  013F  1507               	bsf	7,2	;volatile
  3222  0140                     l2508:	
  3223                           
  3224                           ;main.c: 214:         wait = 0;
  3225  0140  3006               	movlw	6
  3226  0141  00AE               	movwf	_operation_mode
  3227  0142  3000               	movlw	0
  3228  0143  00AF               	movwf	_operation_mode+1
  3229  0144                     l2510:	
  3230                           
  3231                           ;main.c: 217: 
  3232  0144  300A               	movlw	10
  3233  0145  00F3               	movwf	___awdiv@divisor
  3234  0146  3000               	movlw	0
  3235  0147  00F4               	movwf	___awdiv@divisor+1
  3236  0148  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0149  1303               	bcf	3,6	;RP1=0, select bank0
  3238  014A  082B               	movf	_sec+1,w
  3239  014B  00F6               	movwf	___awdiv@dividend+1
  3240  014C  082A               	movf	_sec,w
  3241  014D  00F5               	movwf	___awdiv@dividend
  3242  014E  120A  118A  270D  120A  118A  	fcall	___awdiv
  3243  0153  0873               	movf	?___awdiv,w
  3244  0154  3E30               	addlw	48
  3245  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0157  00BA               	movwf	??_set_time
  3248  0158  083A               	movf	??_set_time,w
  3249  0159  00B0               	movwf	_sec_arr
  3250  015A                     l2512:	
  3251                           
  3252                           ;main.c: 218:         clcd_print(sec_arr,(0xC0 + 9));
  3253  015A  300A               	movlw	10
  3254  015B  00F3               	movwf	___awmod@divisor
  3255  015C  3000               	movlw	0
  3256  015D  00F4               	movwf	___awmod@divisor+1
  3257  015E  082B               	movf	_sec+1,w
  3258  015F  00F6               	movwf	___awmod@dividend+1
  3259  0160  082A               	movf	_sec,w
  3260  0161  00F5               	movwf	___awmod@dividend
  3261  0162  120A  118A  2361  120A  118A  	fcall	___awmod
  3262  0167  0873               	movf	?___awmod,w
  3263  0168  3E30               	addlw	48
  3264  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3265  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3266  016B  00BA               	movwf	??_set_time
  3267  016C  083A               	movf	??_set_time,w
  3268  016D  00B1               	movwf	_sec_arr+1
  3269  016E                     l2514:	
  3270                           
  3271                           ;main.c: 219:     }
  3272  016E  01B2               	clrf	_sec_arr+2
  3273  016F                     l2516:	
  3274                           
  3275                           ;main.c: 221:         switch(blink_posi){
  3276  016F  300A               	movlw	10
  3277  0170  00F3               	movwf	___awdiv@divisor
  3278  0171  3000               	movlw	0
  3279  0172  00F4               	movwf	___awdiv@divisor+1
  3280  0173  0879               	movf	_min+1,w
  3281  0174  00F6               	movwf	___awdiv@dividend+1
  3282  0175  0878               	movf	_min,w
  3283  0176  00F5               	movwf	___awdiv@dividend
  3284  0177  120A  118A  270D  120A  118A  	fcall	___awdiv
  3285  017C  0873               	movf	?___awdiv,w
  3286  017D  3E30               	addlw	48
  3287  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3288  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0180  00BA               	movwf	??_set_time
  3290  0181  083A               	movf	??_set_time,w
  3291  0182  00B3               	movwf	_min_arr
  3292  0183                     l2518:	
  3293                           
  3294                           ;main.c: 222:             case 0:
  3295  0183  300A               	movlw	10
  3296  0184  00F3               	movwf	___awmod@divisor
  3297  0185  3000               	movlw	0
  3298  0186  00F4               	movwf	___awmod@divisor+1
  3299  0187  0879               	movf	_min+1,w
  3300  0188  00F6               	movwf	___awmod@dividend+1
  3301  0189  0878               	movf	_min,w
  3302  018A  00F5               	movwf	___awmod@dividend
  3303  018B  120A  118A  2361  120A  118A  	fcall	___awmod
  3304  0190  0873               	movf	?___awmod,w
  3305  0191  3E30               	addlw	48
  3306  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0194  00BA               	movwf	??_set_time
  3309  0195  083A               	movf	??_set_time,w
  3310  0196  00B4               	movwf	_min_arr+1
  3311  0197                     l2520:	
  3312                           
  3313                           ;main.c: 223:                 clcd_print("  ",(0xC0 + 9));
  3314  0197  01B5               	clrf	_min_arr+2
  3315  0198                     l2522:	
  3316                           
  3317                           ;main.c: 226:                 clcd_print("  ",(0xC0 + 6));
  3318  0198  3001               	movlw	1
  3319  0199  07A6               	addwf	set_time@wait,f
  3320  019A  1803               	skipnc
  3321  019B  0AA7               	incf	set_time@wait+1,f
  3322  019C  3000               	movlw	0
  3323  019D  07A7               	addwf	set_time@wait+1,f
  3324  019E  3033               	movlw	51
  3325  019F  0626               	xorwf	set_time@wait,w
  3326  01A0  0427               	iorwf	set_time@wait+1,w
  3327  01A1  1D03               	btfss	3,2
  3328  01A2  29A4               	goto	u2141
  3329  01A3  29A5               	goto	u2140
  3330  01A4                     u2141:	
  3331  01A4  29D1               	goto	l2532
  3332  01A5                     u2140:	
  3333  01A5                     l2524:	
  3334                           
  3335                           ;main.c: 227:                 break;
  3336  01A5  01A6               	clrf	set_time@wait
  3337  01A6  01A7               	clrf	set_time@wait+1
  3338  01A7                     l2526:	
  3339                           
  3340                           ;main.c: 228:         }
  3341  01A7  0828               	movf	set_time@blink,w
  3342  01A8  0429               	iorwf	set_time@blink+1,w
  3343  01A9  1903               	btfsc	3,2
  3344  01AA  29AC               	goto	u2151
  3345  01AB  29AE               	goto	u2150
  3346  01AC                     u2151:	
  3347  01AC  3001               	movlw	1
  3348  01AD  29AF               	goto	u2160
  3349  01AE                     u2150:	
  3350  01AE  3000               	movlw	0
  3351  01AF                     u2160:	
  3352  01AF  00BA               	movwf	??_set_time
  3353  01B0  01BB               	clrf	??_set_time+1
  3354  01B1  083A               	movf	??_set_time,w
  3355  01B2  00A8               	movwf	set_time@blink
  3356  01B3  083B               	movf	??_set_time+1,w
  3357  01B4  00A9               	movwf	set_time@blink+1
  3358  01B5                     l2528:	
  3359                           
  3360                           ;main.c: 229:     }
  3361  01B5  3033               	movlw	(low (_min_arr| 0))& (0+255)
  3362  01B6  00B6               	movwf	clcd_print@str
  3363  01B7  3000               	movlw	0
  3364  01B8  00B7               	movwf	clcd_print@str+1
  3365  01B9  30C6               	movlw	198
  3366  01BA  00BA               	movwf	??_set_time
  3367  01BB  083A               	movf	??_set_time,w
  3368  01BC  00B8               	movwf	clcd_print@addr
  3369  01BD  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  3370  01C2                     l2530:	
  3371                           
  3372                           ;main.c: 231: }
  3373  01C2  3030               	movlw	(low (_sec_arr| 0))& (0+255)
  3374  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3375  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3376  01C5  00B6               	movwf	clcd_print@str
  3377  01C6  3000               	movlw	0
  3378  01C7  00B7               	movwf	clcd_print@str+1
  3379  01C8  30C9               	movlw	201
  3380  01C9  00BA               	movwf	??_set_time
  3381  01CA  083A               	movf	??_set_time,w
  3382  01CB  00B8               	movwf	clcd_print@addr
  3383  01CC  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  3384  01D1                     l2532:	
  3385                           
  3386                           ;main.c: 233: {
  3387  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3388  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3389  01D3  0828               	movf	set_time@blink,w
  3390  01D4  0429               	iorwf	set_time@blink+1,w
  3391  01D5  1903               	btfsc	3,2
  3392  01D6  29D8               	goto	u2171
  3393  01D7  29D9               	goto	u2170
  3394  01D8                     u2171:	
  3395  01D8  2A03               	goto	l138
  3396  01D9                     u2170:	
  3397  01D9  29F6               	goto	l2542
  3398  01DA                     l2536:	
  3399                           
  3400                           ;main.c: 236:     {
  3401  01DA  3013               	movlw	low ((STR_19+19)| (0+32768))
  3402  01DB  00B6               	movwf	clcd_print@str
  3403  01DC  3084               	movlw	high ((STR_19+19)| (0+32768))
  3404  01DD  00B7               	movwf	clcd_print@str+1
  3405  01DE  30C9               	movlw	201
  3406  01DF  00BA               	movwf	??_set_time
  3407  01E0  083A               	movf	??_set_time,w
  3408  01E1  00B8               	movwf	clcd_print@addr
  3409  01E2  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  3410                           
  3411                           ;main.c: 237:         RC1 = 1;
  3412  01E7  2A03               	goto	l138
  3413  01E8                     l2538:	
  3414                           
  3415                           ;main.c: 239:         TMR2ON = 0;
  3416  01E8  3013               	movlw	low ((STR_19+19)| (0+32768))
  3417  01E9  00B6               	movwf	clcd_print@str
  3418  01EA  3084               	movlw	high ((STR_19+19)| (0+32768))
  3419  01EB  00B7               	movwf	clcd_print@str+1
  3420  01EC  30C6               	movlw	198
  3421  01ED  00BA               	movwf	??_set_time
  3422  01EE  083A               	movf	??_set_time,w
  3423  01EF  00B8               	movwf	clcd_print@addr
  3424  01F0  120A  158A  26F4  120A  118A  	fcall	_clcd_print
  3425                           
  3426                           ;main.c: 240:         clear_display();
  3427  01F5  2A03               	goto	l138
  3428  01F6                     l2542:	
  3429                           
  3430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3431                           ; Switch size 1, requested type "simple"
  3432                           ; Number of cases is 1, Range of values is 0 to 0
  3433                           ; switch strategies available:
  3434                           ; Name         Instructions Cycles
  3435                           ; simple_byte            4     3 (average)
  3436                           ; direct_byte           11     8 (fixed)
  3437                           ; jumptable            260     6 (fixed)
  3438                           ;	Chosen strategy is simple_byte
  3439  01F6  0825               	movf	set_time@blink_posi+1,w
  3440  01F7  3A00               	xorlw	0	; case 0
  3441  01F8  1903               	skipnz
  3442  01F9  29FB               	goto	l2748
  3443  01FA  2A03               	goto	l138
  3444  01FB                     l2748:	
  3445                           
  3446                           ; Switch size 1, requested type "simple"
  3447                           ; Number of cases is 2, Range of values is 0 to 1
  3448                           ; switch strategies available:
  3449                           ; Name         Instructions Cycles
  3450                           ; simple_byte            7     4 (average)
  3451                           ; direct_byte           14     8 (fixed)
  3452                           ; jumptable            260     6 (fixed)
  3453                           ;	Chosen strategy is simple_byte
  3454  01FB  0824               	movf	set_time@blink_posi,w
  3455  01FC  3A00               	xorlw	0	; case 0
  3456  01FD  1903               	skipnz
  3457  01FE  29DA               	goto	l2536
  3458  01FF  3A01               	xorlw	1	; case 1
  3459  0200  1903               	skipnz
  3460  0201  29E8               	goto	l2538
  3461  0202  2A03               	goto	l138
  3462  0203                     l138:	
  3463  0203  0008               	return
  3464  0204                     __end_of_set_time:	
  3465                           
  3466                           	psect	text9
  3467  0E5E                     __ptext9:	
  3468 ;; *************** function _clear_display *****************
  3469 ;; Defined at:
  3470 ;;		line 120 in file "main.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    2
  3491 ;; This function calls:
  3492 ;;		_clcd_write
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;;		_operation_call
  3496 ;;		_set_time
  3497 ;;		_door_status_check
  3498 ;;		_time_display
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function _clear_display
  3504  0E5E                     _clear_display:	
  3505  0E5E                     l2240:	
  3506                           ;incstack = 0
  3507                           ; Regs used in _clear_display: [wreg+status,2+status,0+pclath+cstack]
  3508                           
  3509                           
  3510                           ;main.c: 121: void operation_call(unsigned char key){
  3511  0E5E  01F3               	clrf	clcd_write@mode
  3512  0E5F  3001               	movlw	1
  3513  0E60  120A  158A  2727  120A  158A  	fcall	_clcd_write
  3514  0E65                     l94:	
  3515  0E65  0008               	return
  3516  0E66                     __end_of_clear_display:	
  3517                           
  3518                           	psect	text10
  3519  0EC9                     __ptext10:	
  3520 ;; *************** function ___wmul *****************
  3521 ;; Defined at:
  3522 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  multiplier      2    3[COMMON] unsigned int 
  3525 ;;  multiplicand    2    5[COMMON] unsigned int 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  product         2    0[BANK0 ] unsigned int 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2    3[COMMON] unsigned int 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         4       0       0       0       0
  3538 ;;      Locals:         0       2       0       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         4       2       0       0       0
  3541 ;;Total ram usage:        6 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_set_time
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function ___wmul
  3553  0EC9                     ___wmul:	
  3554  0EC9                     l2290:	
  3555                           ;incstack = 0
  3556                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3557                           
  3558  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0ECB  01B6               	clrf	___wmul@product
  3561  0ECC  01B7               	clrf	___wmul@product+1
  3562  0ECD                     l2292:	
  3563  0ECD  1C73               	btfss	___wmul@multiplier,0
  3564  0ECE  2ED0               	goto	u1771
  3565  0ECF  2ED1               	goto	u1770
  3566  0ED0                     u1771:	
  3567  0ED0  2ED9               	goto	l366
  3568  0ED1                     u1770:	
  3569  0ED1                     l2294:	
  3570  0ED1  0875               	movf	___wmul@multiplicand,w
  3571  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0ED4  07B6               	addwf	___wmul@product,f
  3574  0ED5  1803               	skipnc
  3575  0ED6  0AB7               	incf	___wmul@product+1,f
  3576  0ED7  0876               	movf	___wmul@multiplicand+1,w
  3577  0ED8  07B7               	addwf	___wmul@product+1,f
  3578  0ED9                     l366:	
  3579  0ED9  3001               	movlw	1
  3580  0EDA                     u1785:	
  3581  0EDA  1003               	clrc
  3582  0EDB  0DF5               	rlf	___wmul@multiplicand,f
  3583  0EDC  0DF6               	rlf	___wmul@multiplicand+1,f
  3584  0EDD  3EFF               	addlw	-1
  3585  0EDE  1D03               	skipz
  3586  0EDF  2EDA               	goto	u1785
  3587  0EE0                     l2296:	
  3588  0EE0  3001               	movlw	1
  3589  0EE1                     u1795:	
  3590  0EE1  1003               	clrc
  3591  0EE2  0CF4               	rrf	___wmul@multiplier+1,f
  3592  0EE3  0CF3               	rrf	___wmul@multiplier,f
  3593  0EE4  3EFF               	addlw	-1
  3594  0EE5  1D03               	skipz
  3595  0EE6  2EE1               	goto	u1795
  3596  0EE7                     l2298:	
  3597  0EE7  0873               	movf	___wmul@multiplier,w
  3598  0EE8  0474               	iorwf	___wmul@multiplier+1,w
  3599  0EE9  1D03               	btfss	3,2
  3600  0EEA  2EEC               	goto	u1801
  3601  0EEB  2EED               	goto	u1800
  3602  0EEC                     u1801:	
  3603  0EEC  2ECD               	goto	l2292
  3604  0EED                     u1800:	
  3605  0EED                     l2300:	
  3606  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0EEF  0837               	movf	___wmul@product+1,w
  3609  0EF0  00F4               	movwf	?___wmul+1
  3610  0EF1  0836               	movf	___wmul@product,w
  3611  0EF2  00F3               	movwf	?___wmul
  3612  0EF3                     l368:	
  3613  0EF3  0008               	return
  3614  0EF4                     __end_of___wmul:	
  3615                           
  3616                           	psect	text11
  3617  0361                     __ptext11:	
  3618 ;; *************** function ___awmod *****************
  3619 ;; Defined at:
  3620 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  divisor         2    3[COMMON] int 
  3623 ;;  dividend        2    5[COMMON] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sign            1    1[BANK0 ] unsigned char 
  3626 ;;  counter         1    0[BANK0 ] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    3[COMMON] int 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         4       0       0       0       0
  3637 ;;      Locals:         0       2       0       0       0
  3638 ;;      Temps:          1       0       0       0       0
  3639 ;;      Totals:         5       2       0       0       0
  3640 ;;Total ram usage:        7 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_set_time
  3647 ;;		_time_display
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function ___awmod
  3653  0361                     ___awmod:	
  3654  0361                     l2348:	
  3655                           ;incstack = 0
  3656                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3657                           
  3658  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0363  01B7               	clrf	___awmod@sign
  3661  0364                     l2350:	
  3662  0364  1FF6               	btfss	___awmod@dividend+1,7
  3663  0365  2B67               	goto	u1911
  3664  0366  2B68               	goto	u1910
  3665  0367                     u1911:	
  3666  0367  2B6F               	goto	l2356
  3667  0368                     u1910:	
  3668  0368                     l2352:	
  3669  0368  09F5               	comf	___awmod@dividend,f
  3670  0369  09F6               	comf	___awmod@dividend+1,f
  3671  036A  0AF5               	incf	___awmod@dividend,f
  3672  036B  1903               	skipnz
  3673  036C  0AF6               	incf	___awmod@dividend+1,f
  3674  036D                     l2354:	
  3675  036D  01B7               	clrf	___awmod@sign
  3676  036E  0AB7               	incf	___awmod@sign,f
  3677  036F                     l2356:	
  3678  036F  1FF4               	btfss	___awmod@divisor+1,7
  3679  0370  2B72               	goto	u1921
  3680  0371  2B73               	goto	u1920
  3681  0372                     u1921:	
  3682  0372  2B78               	goto	l2360
  3683  0373                     u1920:	
  3684  0373                     l2358:	
  3685  0373  09F3               	comf	___awmod@divisor,f
  3686  0374  09F4               	comf	___awmod@divisor+1,f
  3687  0375  0AF3               	incf	___awmod@divisor,f
  3688  0376  1903               	skipnz
  3689  0377  0AF4               	incf	___awmod@divisor+1,f
  3690  0378                     l2360:	
  3691  0378  0873               	movf	___awmod@divisor,w
  3692  0379  0474               	iorwf	___awmod@divisor+1,w
  3693  037A  1903               	btfsc	3,2
  3694  037B  2B7D               	goto	u1931
  3695  037C  2B7E               	goto	u1930
  3696  037D                     u1931:	
  3697  037D  2BAD               	goto	l2378
  3698  037E                     u1930:	
  3699  037E                     l2362:	
  3700  037E  01B6               	clrf	___awmod@counter
  3701  037F  0AB6               	incf	___awmod@counter,f
  3702  0380  2B8C               	goto	l2368
  3703  0381                     l2364:	
  3704  0381  3001               	movlw	1
  3705  0382                     u1945:	
  3706  0382  1003               	clrc
  3707  0383  0DF3               	rlf	___awmod@divisor,f
  3708  0384  0DF4               	rlf	___awmod@divisor+1,f
  3709  0385  3EFF               	addlw	-1
  3710  0386  1D03               	skipz
  3711  0387  2B82               	goto	u1945
  3712  0388                     l2366:	
  3713  0388  3001               	movlw	1
  3714  0389  00F7               	movwf	??___awmod
  3715  038A  0877               	movf	??___awmod,w
  3716  038B  07B6               	addwf	___awmod@counter,f
  3717  038C                     l2368:	
  3718  038C  1FF4               	btfss	___awmod@divisor+1,7
  3719  038D  2B8F               	goto	u1951
  3720  038E  2B90               	goto	u1950
  3721  038F                     u1951:	
  3722  038F  2B81               	goto	l2364
  3723  0390                     u1950:	
  3724  0390                     l2370:	
  3725  0390  0874               	movf	___awmod@divisor+1,w
  3726  0391  0276               	subwf	___awmod@dividend+1,w
  3727  0392  1D03               	skipz
  3728  0393  2B96               	goto	u1965
  3729  0394  0873               	movf	___awmod@divisor,w
  3730  0395  0275               	subwf	___awmod@dividend,w
  3731  0396                     u1965:	
  3732  0396  1C03               	skipc
  3733  0397  2B99               	goto	u1961
  3734  0398  2B9A               	goto	u1960
  3735  0399                     u1961:	
  3736  0399  2BA0               	goto	l2374
  3737  039A                     u1960:	
  3738  039A                     l2372:	
  3739  039A  0873               	movf	___awmod@divisor,w
  3740  039B  02F5               	subwf	___awmod@dividend,f
  3741  039C  0874               	movf	___awmod@divisor+1,w
  3742  039D  1C03               	skipc
  3743  039E  03F6               	decf	___awmod@dividend+1,f
  3744  039F  02F6               	subwf	___awmod@dividend+1,f
  3745  03A0                     l2374:	
  3746  03A0  3001               	movlw	1
  3747  03A1                     u1975:	
  3748  03A1  1003               	clrc
  3749  03A2  0CF4               	rrf	___awmod@divisor+1,f
  3750  03A3  0CF3               	rrf	___awmod@divisor,f
  3751  03A4  3EFF               	addlw	-1
  3752  03A5  1D03               	skipz
  3753  03A6  2BA1               	goto	u1975
  3754  03A7                     l2376:	
  3755  03A7  3001               	movlw	1
  3756  03A8  02B6               	subwf	___awmod@counter,f
  3757  03A9  1D03               	btfss	3,2
  3758  03AA  2BAC               	goto	u1981
  3759  03AB  2BAD               	goto	u1980
  3760  03AC                     u1981:	
  3761  03AC  2B90               	goto	l2370
  3762  03AD                     u1980:	
  3763  03AD                     l2378:	
  3764  03AD  0837               	movf	___awmod@sign,w
  3765  03AE  1903               	btfsc	3,2
  3766  03AF  2BB1               	goto	u1991
  3767  03B0  2BB2               	goto	u1990
  3768  03B1                     u1991:	
  3769  03B1  2BB7               	goto	l2382
  3770  03B2                     u1990:	
  3771  03B2                     l2380:	
  3772  03B2  09F5               	comf	___awmod@dividend,f
  3773  03B3  09F6               	comf	___awmod@dividend+1,f
  3774  03B4  0AF5               	incf	___awmod@dividend,f
  3775  03B5  1903               	skipnz
  3776  03B6  0AF6               	incf	___awmod@dividend+1,f
  3777  03B7                     l2382:	
  3778  03B7  0876               	movf	___awmod@dividend+1,w
  3779  03B8  00F4               	movwf	?___awmod+1
  3780  03B9  0875               	movf	___awmod@dividend,w
  3781  03BA  00F3               	movwf	?___awmod
  3782  03BB                     l532:	
  3783  03BB  0008               	return
  3784  03BC                     __end_of___awmod:	
  3785                           
  3786                           	psect	text12
  3787  070D                     __ptext12:	
  3788 ;; *************** function ___awdiv *****************
  3789 ;; Defined at:
  3790 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  divisor         2    3[COMMON] int 
  3793 ;;  dividend        2    5[COMMON] int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  quotient        2    2[BANK0 ] int 
  3796 ;;  sign            1    1[BANK0 ] unsigned char 
  3797 ;;  counter         1    0[BANK0 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    3[COMMON] int 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         4       0       0       0       0
  3808 ;;      Locals:         0       4       0       0       0
  3809 ;;      Temps:          1       0       0       0       0
  3810 ;;      Totals:         5       4       0       0       0
  3811 ;;Total ram usage:        9 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_set_time
  3818 ;;		_time_display
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function ___awdiv
  3824  070D                     ___awdiv:	
  3825  070D                     l2304:	
  3826                           ;incstack = 0
  3827                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3828                           
  3829  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3830  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3831  070F  01B7               	clrf	___awdiv@sign
  3832  0710                     l2306:	
  3833  0710  1FF4               	btfss	___awdiv@divisor+1,7
  3834  0711  2F13               	goto	u1811
  3835  0712  2F14               	goto	u1810
  3836  0713                     u1811:	
  3837  0713  2F1B               	goto	l2312
  3838  0714                     u1810:	
  3839  0714                     l2308:	
  3840  0714  09F3               	comf	___awdiv@divisor,f
  3841  0715  09F4               	comf	___awdiv@divisor+1,f
  3842  0716  0AF3               	incf	___awdiv@divisor,f
  3843  0717  1903               	skipnz
  3844  0718  0AF4               	incf	___awdiv@divisor+1,f
  3845  0719                     l2310:	
  3846  0719  01B7               	clrf	___awdiv@sign
  3847  071A  0AB7               	incf	___awdiv@sign,f
  3848  071B                     l2312:	
  3849  071B  1FF6               	btfss	___awdiv@dividend+1,7
  3850  071C  2F1E               	goto	u1821
  3851  071D  2F1F               	goto	u1820
  3852  071E                     u1821:	
  3853  071E  2F28               	goto	l2318
  3854  071F                     u1820:	
  3855  071F                     l2314:	
  3856  071F  09F5               	comf	___awdiv@dividend,f
  3857  0720  09F6               	comf	___awdiv@dividend+1,f
  3858  0721  0AF5               	incf	___awdiv@dividend,f
  3859  0722  1903               	skipnz
  3860  0723  0AF6               	incf	___awdiv@dividend+1,f
  3861  0724                     l2316:	
  3862  0724  3001               	movlw	1
  3863  0725  00F7               	movwf	??___awdiv
  3864  0726  0877               	movf	??___awdiv,w
  3865  0727  06B7               	xorwf	___awdiv@sign,f
  3866  0728                     l2318:	
  3867  0728  01B8               	clrf	___awdiv@quotient
  3868  0729  01B9               	clrf	___awdiv@quotient+1
  3869  072A                     l2320:	
  3870  072A  0873               	movf	___awdiv@divisor,w
  3871  072B  0474               	iorwf	___awdiv@divisor+1,w
  3872  072C  1903               	btfsc	3,2
  3873  072D  2F2F               	goto	u1831
  3874  072E  2F30               	goto	u1830
  3875  072F                     u1831:	
  3876  072F  2F67               	goto	l2340
  3877  0730                     u1830:	
  3878  0730                     l2322:	
  3879  0730  01B6               	clrf	___awdiv@counter
  3880  0731  0AB6               	incf	___awdiv@counter,f
  3881  0732  2F3E               	goto	l2328
  3882  0733                     l2324:	
  3883  0733  3001               	movlw	1
  3884  0734                     u1845:	
  3885  0734  1003               	clrc
  3886  0735  0DF3               	rlf	___awdiv@divisor,f
  3887  0736  0DF4               	rlf	___awdiv@divisor+1,f
  3888  0737  3EFF               	addlw	-1
  3889  0738  1D03               	skipz
  3890  0739  2F34               	goto	u1845
  3891  073A                     l2326:	
  3892  073A  3001               	movlw	1
  3893  073B  00F7               	movwf	??___awdiv
  3894  073C  0877               	movf	??___awdiv,w
  3895  073D  07B6               	addwf	___awdiv@counter,f
  3896  073E                     l2328:	
  3897  073E  1FF4               	btfss	___awdiv@divisor+1,7
  3898  073F  2F41               	goto	u1851
  3899  0740  2F42               	goto	u1850
  3900  0741                     u1851:	
  3901  0741  2F33               	goto	l2324
  3902  0742                     u1850:	
  3903  0742                     l2330:	
  3904  0742  3001               	movlw	1
  3905  0743                     u1865:	
  3906  0743  1003               	clrc
  3907  0744  0DB8               	rlf	___awdiv@quotient,f
  3908  0745  0DB9               	rlf	___awdiv@quotient+1,f
  3909  0746  3EFF               	addlw	-1
  3910  0747  1D03               	skipz
  3911  0748  2F43               	goto	u1865
  3912  0749  0874               	movf	___awdiv@divisor+1,w
  3913  074A  0276               	subwf	___awdiv@dividend+1,w
  3914  074B  1D03               	skipz
  3915  074C  2F4F               	goto	u1875
  3916  074D  0873               	movf	___awdiv@divisor,w
  3917  074E  0275               	subwf	___awdiv@dividend,w
  3918  074F                     u1875:	
  3919  074F  1C03               	skipc
  3920  0750  2F52               	goto	u1871
  3921  0751  2F53               	goto	u1870
  3922  0752                     u1871:	
  3923  0752  2F5A               	goto	l2336
  3924  0753                     u1870:	
  3925  0753                     l2332:	
  3926  0753  0873               	movf	___awdiv@divisor,w
  3927  0754  02F5               	subwf	___awdiv@dividend,f
  3928  0755  0874               	movf	___awdiv@divisor+1,w
  3929  0756  1C03               	skipc
  3930  0757  03F6               	decf	___awdiv@dividend+1,f
  3931  0758  02F6               	subwf	___awdiv@dividend+1,f
  3932  0759                     l2334:	
  3933  0759  1438               	bsf	___awdiv@quotient,0
  3934  075A                     l2336:	
  3935  075A  3001               	movlw	1
  3936  075B                     u1885:	
  3937  075B  1003               	clrc
  3938  075C  0CF4               	rrf	___awdiv@divisor+1,f
  3939  075D  0CF3               	rrf	___awdiv@divisor,f
  3940  075E  3EFF               	addlw	-1
  3941  075F  1D03               	skipz
  3942  0760  2F5B               	goto	u1885
  3943  0761                     l2338:	
  3944  0761  3001               	movlw	1
  3945  0762  02B6               	subwf	___awdiv@counter,f
  3946  0763  1D03               	btfss	3,2
  3947  0764  2F66               	goto	u1891
  3948  0765  2F67               	goto	u1890
  3949  0766                     u1891:	
  3950  0766  2F42               	goto	l2330
  3951  0767                     u1890:	
  3952  0767                     l2340:	
  3953  0767  0837               	movf	___awdiv@sign,w
  3954  0768  1903               	btfsc	3,2
  3955  0769  2F6B               	goto	u1901
  3956  076A  2F6C               	goto	u1900
  3957  076B                     u1901:	
  3958  076B  2F71               	goto	l2344
  3959  076C                     u1900:	
  3960  076C                     l2342:	
  3961  076C  09B8               	comf	___awdiv@quotient,f
  3962  076D  09B9               	comf	___awdiv@quotient+1,f
  3963  076E  0AB8               	incf	___awdiv@quotient,f
  3964  076F  1903               	skipnz
  3965  0770  0AB9               	incf	___awdiv@quotient+1,f
  3966  0771                     l2344:	
  3967  0771  0839               	movf	___awdiv@quotient+1,w
  3968  0772  00F4               	movwf	?___awdiv+1
  3969  0773  0838               	movf	___awdiv@quotient,w
  3970  0774  00F3               	movwf	?___awdiv
  3971  0775                     l519:	
  3972  0775  0008               	return
  3973  0776                     __end_of___awdiv:	
  3974                           
  3975                           	psect	text13
  3976  0F5D                     __ptext13:	
  3977 ;; *************** function _cooking_operations *****************
  3978 ;; Defined at:
  3979 ;;		line 124 in file "main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          0       3       0       0       0
  3996 ;;      Totals:         0       3       0       0       0
  3997 ;;Total ram usage:        3 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    3
  4000 ;; This function calls:
  4001 ;;		_clcd_print
  4002 ;; This function is called by:
  4003 ;;		_operation_call
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _cooking_operations
  4009  0F5D                     _cooking_operations:	
  4010  0F5D                     l2394:	
  4011                           ;incstack = 0
  4012                           ; Regs used in _cooking_operations: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4013                           
  4014                           
  4015                           ;main.c: 125:             break;
  4016  0F5D  30E0               	movlw	low (STR_4| (0+32768))
  4017  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0F60  00B6               	movwf	clcd_print@str
  4020  0F61  3084               	movlw	high (STR_4| (0+32768))
  4021  0F62  00B7               	movwf	clcd_print@str+1
  4022  0F63  3080               	movlw	128
  4023  0F64  00B9               	movwf	??_cooking_operations
  4024  0F65  0839               	movf	??_cooking_operations,w
  4025  0F66  00B8               	movwf	clcd_print@addr
  4026  0F67  120A  158A  26F4  120A  158A  	fcall	_clcd_print
  4027                           
  4028                           ;main.c: 126:         case 0x05:
  4029  0F6C  30D7               	movlw	low (STR_5| (0+32768))
  4030  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0F6F  00B6               	movwf	clcd_print@str
  4033  0F70  3084               	movlw	high (STR_5| (0+32768))
  4034  0F71  00B7               	movwf	clcd_print@str+1
  4035  0F72  30C0               	movlw	192
  4036  0F73  00B9               	movwf	??_cooking_operations
  4037  0F74  0839               	movf	??_cooking_operations,w
  4038  0F75  00B8               	movwf	clcd_print@addr
  4039  0F76  120A  158A  26F4  120A  158A  	fcall	_clcd_print
  4040                           
  4041                           ;main.c: 127:         case 0x06:
  4042  0F7B  3083               	movlw	low (STR_6| (0+32768))
  4043  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0F7E  00B6               	movwf	clcd_print@str
  4046  0F7F  3084               	movlw	high (STR_6| (0+32768))
  4047  0F80  00B7               	movwf	clcd_print@str+1
  4048  0F81  3090               	movlw	144
  4049  0F82  00B9               	movwf	??_cooking_operations
  4050  0F83  0839               	movf	??_cooking_operations,w
  4051  0F84  00B8               	movwf	clcd_print@addr
  4052  0F85  120A  158A  26F4  120A  158A  	fcall	_clcd_print
  4053                           
  4054                           ;main.c: 128:             time_display();
  4055  0F8A  30E9               	movlw	low (STR_7| (0+32768))
  4056  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0F8D  00B6               	movwf	clcd_print@str
  4059  0F8E  3084               	movlw	high (STR_7| (0+32768))
  4060  0F8F  00B7               	movwf	clcd_print@str+1
  4061  0F90  30D0               	movlw	208
  4062  0F91  00B9               	movwf	??_cooking_operations
  4063  0F92  0839               	movf	??_cooking_operations,w
  4064  0F93  00B8               	movwf	clcd_print@addr
  4065  0F94  120A  158A  26F4  120A  158A  	fcall	_clcd_print
  4066  0F99                     l2396:	
  4067                           
  4068                           ;main.c: 130:         case 0x02:
  4069  0F99  3033               	movlw	51
  4070  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0F9C  00BB               	movwf	??_cooking_operations+2
  4073  0F9D  30BB               	movlw	187
  4074  0F9E  00BA               	movwf	??_cooking_operations+1
  4075  0F9F  30DF               	movlw	223
  4076  0FA0  00B9               	movwf	??_cooking_operations
  4077  0FA1                     u2347:	
  4078  0FA1  0BB9               	decfsz	??_cooking_operations,f
  4079  0FA2  2FA1               	goto	u2347
  4080  0FA3  0BBA               	decfsz	??_cooking_operations+1,f
  4081  0FA4  2FA1               	goto	u2347
  4082  0FA5  0BBB               	decfsz	??_cooking_operations+2,f
  4083  0FA6  2FA1               	goto	u2347
  4084  0FA7                     l97:	
  4085  0FA7  0008               	return
  4086  0FA8                     __end_of_cooking_operations:	
  4087                           
  4088                           	psect	text14
  4089  0EF4                     __ptext14:	
  4090 ;; *************** function _clcd_print *****************
  4091 ;; Defined at:
  4092 ;;		line 61 in file "clcd.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  4095 ;;		 -> STR_20(16), STR_19(22), STR_18(22), STR_17(22), 
  4096 ;;		 -> STR_15(10), STR_14(13), STR_13(10), STR_12(3), 
  4097 ;;		 -> STR_11(3), min_arr(3), sec_arr(3), STR_10(17), 
  4098 ;;		 -> STR_9(12), STR_8(17), STR_7(9), STR_6(14), 
  4099 ;;		 -> STR_5(9), STR_4(9), STR_3(15), STR_2(12), 
  4100 ;;		 -> STR_1(13), 
  4101 ;;  addr            1    2[BANK0 ] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       3       0       0       0
  4114 ;;      Locals:         0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0
  4116 ;;      Totals:         0       3       0       0       0
  4117 ;;Total ram usage:        3 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		_clcd_write
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;;		_power_on_screen
  4125 ;;		_cooking_operations
  4126 ;;		_set_time
  4127 ;;		_door_status_check
  4128 ;;		_time_display
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           
  4133                           ;psect for function _clcd_print
  4134  0EF4                     _clcd_print:	
  4135  0EF4                     l2242:	
  4136                           ;incstack = 0
  4137                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4138                           
  4139                           
  4140                           ;clcd.c: 61: void clcd_print(const char *str, unsigned char addr);clcd.c: 62: {;clcd.c: 
      +                          63:     clcd_write(addr, 0);
  4141  0EF4  01F3               	clrf	clcd_write@mode
  4142  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0EF7  0838               	movf	clcd_print@addr,w
  4145  0EF8  120A  158A  2727  120A  158A  	fcall	_clcd_write
  4146                           
  4147                           ;clcd.c: 65:     while (*str != '\0')
  4148  0EFD  2F16               	goto	l2248
  4149  0EFE                     l2244:	
  4150                           
  4151                           ;clcd.c: 66:     {;clcd.c: 67:         clcd_write(*str, 1);
  4152  0EFE  01F3               	clrf	clcd_write@mode
  4153  0EFF  0AF3               	incf	clcd_write@mode,f
  4154  0F00  0837               	movf	clcd_print@str+1,w
  4155  0F01  00FF               	movwf	btemp+1
  4156  0F02  0836               	movf	clcd_print@str,w
  4157  0F03  0084               	movwf	4
  4158  0F04  120A  158A  2000  120A  158A  	fcall	stringtab
  4159  0F09  120A  158A  2727  120A  158A  	fcall	_clcd_write
  4160  0F0E                     l2246:	
  4161                           
  4162                           ;clcd.c: 68:         str++;
  4163  0F0E  3001               	movlw	1
  4164  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4166  0F11  07B6               	addwf	clcd_print@str,f
  4167  0F12  1803               	skipnc
  4168  0F13  0AB7               	incf	clcd_print@str+1,f
  4169  0F14  3000               	movlw	0
  4170  0F15  07B7               	addwf	clcd_print@str+1,f
  4171  0F16                     l2248:	
  4172                           
  4173                           ;clcd.c: 65:     while (*str != '\0')
  4174  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0F18  0837               	movf	clcd_print@str+1,w
  4177  0F19  00FF               	movwf	btemp+1
  4178  0F1A  0836               	movf	clcd_print@str,w
  4179  0F1B  0084               	movwf	4
  4180  0F1C  120A  158A  2000  120A  158A  	fcall	stringtab
  4181  0F21  3A00               	xorlw	0
  4182  0F22  1D03               	skipz
  4183  0F23  2F25               	goto	u1741
  4184  0F24  2F26               	goto	u1740
  4185  0F25                     u1741:	
  4186  0F25  2EFE               	goto	l2244
  4187  0F26                     u1740:	
  4188  0F26                     l181:	
  4189  0F26  0008               	return
  4190  0F27                     __end_of_clcd_print:	
  4191                           
  4192                           	psect	text15
  4193  0EAB                     __ptext15:	
  4194 ;; *************** function _init_config *****************
  4195 ;; Defined at:
  4196 ;;		line 15 in file "main.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, pclath, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    4
  4217 ;; This function calls:
  4218 ;;		_init_clcd
  4219 ;;		_init_matrix_keypad
  4220 ;;		_init_timer2
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           
  4227                           ;psect for function _init_config
  4228  0EAB                     _init_config:	
  4229  0EAB                     l2548:	
  4230                           ;incstack = 0
  4231                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4232                           
  4233                           
  4234                           ;main.c: 16: 
  4235  0EAB  120A  158A  266E  120A  158A  	fcall	_init_clcd
  4236                           
  4237                           ;main.c: 17: }
  4238  0EB0  120A  158A  2686  120A  158A  	fcall	_init_matrix_keypad
  4239                           
  4240                           ;main.c: 18: 
  4241  0EB5  120A  158A  2679  120A  158A  	fcall	_init_timer2
  4242  0EBA                     l2550:	
  4243                           
  4244                           ;main.c: 19: void main(void) {
  4245  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  4246  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  4247  0EBC  1087               	bcf	7,1	;volatile
  4248  0EBD                     l2552:	
  4249                           
  4250                           ;main.c: 21:     init_config();
  4251  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0EBF  1087               	bcf	7,1	;volatile
  4254  0EC0                     l2554:	
  4255                           
  4256                           ;main.c: 23:     clear_display();
  4257  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  4258  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  4259  0EC2  1107               	bcf	7,2	;volatile
  4260  0EC3                     l2556:	
  4261                           
  4262                           ;main.c: 25: 
  4263  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0EC5  1107               	bcf	7,2	;volatile
  4266  0EC6                     l2558:	
  4267                           
  4268                           ;main.c: 27:         key = read_matrix_keypad(1);
  4269  0EC6  170B               	bsf	11,6	;volatile
  4270  0EC7                     l2560:	
  4271                           
  4272                           ;main.c: 28:         if(operation_mode == 0x02)
  4273  0EC7  178B               	bsf	11,7	;volatile
  4274  0EC8                     l57:	
  4275  0EC8  0008               	return
  4276  0EC9                     __end_of_init_config:	
  4277                           
  4278                           	psect	text16
  4279  0E79                     __ptext16:	
  4280 ;; *************** function _init_timer2 *****************
  4281 ;; Defined at:
  4282 ;;		line 3 in file "timers.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_init_config
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           
  4311                           ;psect for function _init_timer2
  4312  0E79                     _init_timer2:	
  4313  0E79                     l1726:	
  4314                           ;incstack = 0
  4315                           ; Regs used in _init_timer2: [wreg]
  4316                           
  4317                           
  4318                           ;timers.c: 6:     T2CKPS0 = 1;
  4319  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4321  0E7B  1412               	bsf	18,0	;volatile
  4322                           
  4323                           ;timers.c: 7:     T2CKPS1 = 1;
  4324  0E7C  1492               	bsf	18,1	;volatile
  4325  0E7D                     l1728:	
  4326                           
  4327                           ;timers.c: 10:     PR2 = 250;
  4328  0E7D  30FA               	movlw	250
  4329  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  4330  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  4331  0E80  0092               	movwf	18	;volatile
  4332  0E81                     l1730:	
  4333                           
  4334                           ;timers.c: 13:     TMR2IE = 1;
  4335  0E81  148C               	bsf	12,1	;volatile
  4336  0E82                     l1732:	
  4337                           
  4338                           ;timers.c: 16:     TMR2ON = 1;
  4339  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0E84  1512               	bsf	18,2	;volatile
  4342  0E85                     l262:	
  4343  0E85  0008               	return
  4344  0E86                     __end_of_init_timer2:	
  4345                           
  4346                           	psect	text17
  4347  0E86                     __ptext17:	
  4348 ;; *************** function _init_matrix_keypad *****************
  4349 ;; Defined at:
  4350 ;;		line 4 in file "matrix_keypad.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_init_config
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function _init_matrix_keypad
  4380  0E86                     _init_matrix_keypad:	
  4381  0E86                     l1714:	
  4382                           ;incstack = 0
  4383                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  4384                           
  4385                           
  4386                           ;matrix_keypad.c: 7:     TRISB = TRISB | 0x07;
  4387  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  4388  0E87  1303               	bcf	3,6	;RP1=0, select bank1
  4389  0E88  0806               	movf	6,w	;volatile
  4390  0E89  3807               	iorlw	7
  4391  0E8A  0086               	movwf	6	;volatile
  4392                           
  4393                           ;matrix_keypad.c: 9:     TRISD = TRISD & 0xF0;
  4394  0E8B  0808               	movf	8,w	;volatile
  4395  0E8C  39F0               	andlw	240
  4396  0E8D  0088               	movwf	8	;volatile
  4397  0E8E                     l1716:	
  4398                           
  4399                           ;matrix_keypad.c: 12:     nRBPU = 0;
  4400  0E8E  1381               	bcf	1,7	;volatile
  4401  0E8F                     l1718:	
  4402                           
  4403                           ;matrix_keypad.c: 15:     RD3 = 1;
  4404  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  4405  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  4406  0E91  1588               	bsf	8,3	;volatile
  4407  0E92                     l1720:	
  4408                           
  4409                           ;matrix_keypad.c: 16:     RD2 = 1;
  4410  0E92  1508               	bsf	8,2	;volatile
  4411  0E93                     l1722:	
  4412                           
  4413                           ;matrix_keypad.c: 17:     RD1 = 1;
  4414  0E93  1488               	bsf	8,1	;volatile
  4415  0E94                     l1724:	
  4416                           
  4417                           ;matrix_keypad.c: 18:     RD0 = 1;
  4418  0E94  1408               	bsf	8,0	;volatile
  4419  0E95                     l204:	
  4420  0E95  0008               	return
  4421  0E96                     __end_of_init_matrix_keypad:	
  4422                           
  4423                           	psect	text18
  4424  0E6E                     __ptext18:	
  4425 ;; *************** function _init_clcd *****************
  4426 ;; Defined at:
  4427 ;;		line 43 in file "clcd.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, pclath, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4441 ;;      Params:         0       0       0       0       0
  4442 ;;      Locals:         0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0
  4444 ;;      Totals:         0       0       0       0       0
  4445 ;;Total ram usage:        0 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		_init_display_controller
  4450 ;; This function is called by:
  4451 ;;		_init_config
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _init_clcd
  4457  0E6E                     _init_clcd:	
  4458  0E6E                     l2386:	
  4459                           ;incstack = 0
  4460                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4461                           
  4462                           
  4463                           ;clcd.c: 46:     TRISD = 0x00;
  4464  0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  4465  0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  4466  0E70  0188               	clrf	8	;volatile
  4467  0E71                     l2388:	
  4468                           
  4469                           ;clcd.c: 49:     TRISE2 = 0;
  4470  0E71  1109               	bcf	9,2	;volatile
  4471  0E72                     l2390:	
  4472                           
  4473                           ;clcd.c: 50:     TRISE1 = 0;
  4474  0E72  1089               	bcf	9,1	;volatile
  4475  0E73                     l2392:	
  4476                           
  4477                           ;clcd.c: 52:     init_display_controller();
  4478  0E73  120A  118A  2776  120A  158A  	fcall	_init_display_controller
  4479  0E78                     l172:	
  4480  0E78  0008               	return
  4481  0E79                     __end_of_init_clcd:	
  4482                           
  4483                           	psect	text19
  4484  0776                     __ptext19:	
  4485 ;; *************** function _init_display_controller *****************
  4486 ;; Defined at:
  4487 ;;		line 21 in file "clcd.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0
  4503 ;;      Temps:          0       2       0       0       0
  4504 ;;      Totals:         0       2       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    2
  4508 ;; This function calls:
  4509 ;;		_clcd_write
  4510 ;; This function is called by:
  4511 ;;		_init_clcd
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _init_display_controller
  4517  0776                     _init_display_controller:	
  4518  0776                     l2270:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4521                           
  4522                           
  4523                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4524  0776  30C3               	movlw	195
  4525  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0779  00B7               	movwf	??_init_display_controller+1
  4528  077A  30CC               	movlw	204
  4529  077B  00B6               	movwf	??_init_display_controller
  4530  077C                     u2357:	
  4531  077C  0BB6               	decfsz	??_init_display_controller,f
  4532  077D  2F7C               	goto	u2357
  4533  077E  0BB7               	decfsz	??_init_display_controller+1,f
  4534  077F  2F7C               	goto	u2357
  4535  0780  0000               	nop
  4536  0781                     l2272:	
  4537                           
  4538                           ;clcd.c: 27:     clcd_write(0x30, 0);
  4539  0781  01F3               	clrf	clcd_write@mode
  4540  0782  3030               	movlw	48
  4541  0783  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4542  0788                     l2274:	
  4543                           
  4544                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4545  0788  301B               	movlw	27
  4546  0789  1283               	bcf	3,5	;RP0=0, select bank0
  4547  078A  1303               	bcf	3,6	;RP1=0, select bank0
  4548  078B  00B7               	movwf	??_init_display_controller+1
  4549  078C  309D               	movlw	157
  4550  078D  00B6               	movwf	??_init_display_controller
  4551  078E                     u2367:	
  4552  078E  0BB6               	decfsz	??_init_display_controller,f
  4553  078F  2F8E               	goto	u2367
  4554  0790  0BB7               	decfsz	??_init_display_controller+1,f
  4555  0791  2F8E               	goto	u2367
  4556  0792  2F93               	nop2
  4557                           
  4558                           ;clcd.c: 29:     clcd_write(0x30, 0);
  4559  0793  01F3               	clrf	clcd_write@mode
  4560  0794  3030               	movlw	48
  4561  0795  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4562  079A                     l2276:	
  4563                           
  4564                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4565  079A  30A5               	movlw	165
  4566  079B  1283               	bcf	3,5	;RP0=0, select bank0
  4567  079C  1303               	bcf	3,6	;RP1=0, select bank0
  4568  079D  00B6               	movwf	??_init_display_controller
  4569  079E                     u2377:	
  4570  079E  0BB6               	decfsz	??_init_display_controller,f
  4571  079F  2F9E               	goto	u2377
  4572  07A0  2FA1               	nop2
  4573  07A1                     l2278:	
  4574                           
  4575                           ;clcd.c: 31:     clcd_write(0x30, 0);
  4576  07A1  01F3               	clrf	clcd_write@mode
  4577  07A2  3030               	movlw	48
  4578  07A3  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4579  07A8                     l2280:	
  4580                           
  4581                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4582  07A8  2FA9               	nop2	;2 cycle nop
  4583  07A9  2FAA               	nop2	;2 cycle nop
  4584  07AA  0000               	nop
  4585  07AB                     l2282:	
  4586                           
  4587                           ;clcd.c: 34:     clcd_write(0x02 , 0);
  4588  07AB  01F3               	clrf	clcd_write@mode
  4589  07AC  3002               	movlw	2
  4590  07AD  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4591  07B2                     l2284:	
  4592                           
  4593                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4594  07B2  30A5               	movlw	165
  4595  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  4596  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  4597  07B5  00B6               	movwf	??_init_display_controller
  4598  07B6                     u2387:	
  4599  07B6  0BB6               	decfsz	??_init_display_controller,f
  4600  07B7  2FB6               	goto	u2387
  4601  07B8  2FB9               	nop2
  4602                           
  4603                           ;clcd.c: 37:     clcd_write(0x01, 0);
  4604  07B9  01F3               	clrf	clcd_write@mode
  4605  07BA  3001               	movlw	1
  4606  07BB  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4607  07C0                     l2286:	
  4608                           
  4609                           ;clcd.c: 38:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4610  07C0  3004               	movlw	4
  4611  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4612  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4613  07C3  00B7               	movwf	??_init_display_controller+1
  4614  07C4  303D               	movlw	61
  4615  07C5  00B6               	movwf	??_init_display_controller
  4616  07C6                     u2397:	
  4617  07C6  0BB6               	decfsz	??_init_display_controller,f
  4618  07C7  2FC6               	goto	u2397
  4619  07C8  0BB7               	decfsz	??_init_display_controller+1,f
  4620  07C9  2FC6               	goto	u2397
  4621  07CA                     l2288:	
  4622                           
  4623                           ;clcd.c: 39:     clcd_write(0x0C, 0);
  4624  07CA  01F3               	clrf	clcd_write@mode
  4625  07CB  300C               	movlw	12
  4626  07CC  120A  158A  2727  120A  118A  	fcall	_clcd_write
  4627                           
  4628                           ;clcd.c: 40:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4629  07D1  30A5               	movlw	165
  4630  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4631  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4632  07D4  00B6               	movwf	??_init_display_controller
  4633  07D5                     u2407:	
  4634  07D5  0BB6               	decfsz	??_init_display_controller,f
  4635  07D6  2FD5               	goto	u2407
  4636  07D7  2FD8               	nop2
  4637  07D8                     l169:	
  4638  07D8  0008               	return
  4639  07D9                     __end_of_init_display_controller:	
  4640                           
  4641                           	psect	text20
  4642  0F27                     __ptext20:	
  4643 ;; *************** function _clcd_write *****************
  4644 ;; Defined at:
  4645 ;;		line 4 in file "clcd.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  byte            1    wreg     unsigned char 
  4648 ;;  mode            1    3[COMMON] unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  byte            1    6[COMMON] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         1       0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0
  4662 ;;      Temps:          2       0       0       0       0
  4663 ;;      Totals:         4       0       0       0       0
  4664 ;;Total ram usage:        4 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    1
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;;		_clear_display
  4672 ;;		_operation_call
  4673 ;;		_init_display_controller
  4674 ;;		_clcd_putch
  4675 ;;		_clcd_print
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function _clcd_write
  4681  0F27                     _clcd_write:	
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  4685                           ;clcd_write@byte stored from wreg
  4686  0F27  00F6               	movwf	clcd_write@byte
  4687  0F28                     l2220:	
  4688                           
  4689                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  4690  0F28  1873               	btfsc	clcd_write@mode,0
  4691  0F29  2F2B               	goto	u1711
  4692  0F2A  2F2F               	goto	u1710
  4693  0F2B                     u1711:	
  4694  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0F2D  1509               	bsf	9,2	;volatile
  4697  0F2E  2F32               	goto	u1724
  4698  0F2F                     u1710:	
  4699  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4700  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4701  0F31  1109               	bcf	9,2	;volatile
  4702  0F32                     u1724:	
  4703  0F32                     l2222:	
  4704                           
  4705                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  4706  0F32  0876               	movf	clcd_write@byte,w
  4707  0F33  39F0               	andlw	240
  4708  0F34  0088               	movwf	8	;volatile
  4709  0F35                     l2224:	
  4710                           
  4711                           ;clcd.c: 9:     RE1 = 1;
  4712  0F35  1489               	bsf	9,1	;volatile
  4713  0F36                     l2226:	
  4714                           
  4715                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4716  0F36  30A6               	movlw	166
  4717  0F37  00F4               	movwf	??_clcd_write
  4718  0F38                     u2417:	
  4719  0F38  0BF4               	decfsz	??_clcd_write,f
  4720  0F39  2F38               	goto	u2417
  4721  0F3A  0000               	nop
  4722  0F3B                     l2228:	
  4723                           
  4724                           ;clcd.c: 11:     RE1 = 0;
  4725  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4726  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4727  0F3D  1089               	bcf	9,1	;volatile
  4728  0F3E                     l2230:	
  4729                           
  4730                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  4731  0F3E  0876               	movf	clcd_write@byte,w
  4732  0F3F  390F               	andlw	15
  4733  0F40  00F4               	movwf	??_clcd_write
  4734  0F41  3003               	movlw	3
  4735  0F42                     u1735:	
  4736  0F42  1003               	clrc
  4737  0F43  0DF4               	rlf	??_clcd_write,f
  4738  0F44  3EFF               	addlw	-1
  4739  0F45  1D03               	skipz
  4740  0F46  2F42               	goto	u1735
  4741  0F47  1003               	clrc
  4742  0F48  0D74               	rlf	??_clcd_write,w
  4743  0F49  0088               	movwf	8	;volatile
  4744  0F4A                     l2232:	
  4745                           
  4746                           ;clcd.c: 14:     RE1 = 1;
  4747  0F4A  1489               	bsf	9,1	;volatile
  4748  0F4B                     l2234:	
  4749                           
  4750                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4751  0F4B  30A6               	movlw	166
  4752  0F4C  00F4               	movwf	??_clcd_write
  4753  0F4D                     u2427:	
  4754  0F4D  0BF4               	decfsz	??_clcd_write,f
  4755  0F4E  2F4D               	goto	u2427
  4756  0F4F  0000               	nop
  4757  0F50                     l2236:	
  4758                           
  4759                           ;clcd.c: 16:     RE1 = 0;
  4760  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  4761  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0F52  1089               	bcf	9,1	;volatile
  4763  0F53                     l2238:	
  4764                           
  4765                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4766  0F53  301B               	movlw	27
  4767  0F54  00F5               	movwf	??_clcd_write+1
  4768  0F55  309E               	movlw	158
  4769  0F56  00F4               	movwf	??_clcd_write
  4770  0F57                     u2437:	
  4771  0F57  0BF4               	decfsz	??_clcd_write,f
  4772  0F58  2F57               	goto	u2437
  4773  0F59  0BF5               	decfsz	??_clcd_write+1,f
  4774  0F5A  2F57               	goto	u2437
  4775  0F5B  0000               	nop
  4776  0F5C                     l166:	
  4777  0F5C  0008               	return
  4778  0F5D                     __end_of_clcd_write:	
  4779                           
  4780                           	psect	text21
  4781  0FA8                     __ptext21:	
  4782 ;; *************** function _isr *****************
  4783 ;; Defined at:
  4784 ;;		line 5 in file "isr.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, btemp+1
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0
  4800 ;;      Temps:          3       0       0       0       0
  4801 ;;      Totals:         3       0       0       0       0
  4802 ;;Total ram usage:        3 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		Interrupt level 1
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _isr
  4813  0FA8                     _isr:	
  4814  0FA8                     i1l2152:	
  4815                           
  4816                           ;isr.c: 7:     static unsigned int count = 0;;isr.c: 9:     if (TMR2IF == 1)
  4817  0FA8  1C8C               	btfss	12,1	;volatile
  4818  0FA9  2FAB               	goto	u166_21
  4819  0FAA  2FAC               	goto	u166_20
  4820  0FAB                     u166_21:	
  4821  0FAB  2FF7               	goto	i1l280
  4822  0FAC                     u166_20:	
  4823  0FAC                     i1l2154:	
  4824                           
  4825                           ;isr.c: 10:     {;isr.c: 11:         if (++count == 1250)
  4826  0FAC  3001               	movlw	1
  4827  0FAD  07A0               	addwf	isr@count,f
  4828  0FAE  1803               	skipnc
  4829  0FAF  0AA1               	incf	isr@count+1,f
  4830  0FB0  3000               	movlw	0
  4831  0FB1  07A1               	addwf	isr@count+1,f
  4832  0FB2  30E2               	movlw	226
  4833  0FB3  0620               	xorwf	isr@count,w
  4834  0FB4  3004               	movlw	4
  4835  0FB5  1903               	skipnz
  4836  0FB6  0621               	xorwf	isr@count+1,w
  4837  0FB7  1D03               	btfss	3,2
  4838  0FB8  2FBA               	goto	u167_21
  4839  0FB9  2FBB               	goto	u167_20
  4840  0FBA                     u167_21:	
  4841  0FBA  2FF4               	goto	i1l2168
  4842  0FBB                     u167_20:	
  4843  0FBB                     i1l2156:	
  4844                           
  4845                           ;isr.c: 12:         {;isr.c: 13:                 count = 0;
  4846  0FBB  01A0               	clrf	isr@count
  4847  0FBC  01A1               	clrf	isr@count+1
  4848  0FBD                     i1l2158:	
  4849                           
  4850                           ;isr.c: 14:             if(sec>0)
  4851  0FBD  082B               	movf	_sec+1,w
  4852  0FBE  3A80               	xorlw	128
  4853  0FBF  00FF               	movwf	btemp+1
  4854  0FC0  3080               	movlw	128
  4855  0FC1  027F               	subwf	btemp+1,w
  4856  0FC2  1D03               	skipz
  4857  0FC3  2FC6               	goto	u168_25
  4858  0FC4  3001               	movlw	1
  4859  0FC5  022A               	subwf	_sec,w
  4860  0FC6                     u168_25:	
  4861  0FC6  1C03               	skipc
  4862  0FC7  2FC9               	goto	u168_21
  4863  0FC8  2FCA               	goto	u168_20
  4864  0FC9                     u168_21:	
  4865  0FC9  2FD3               	goto	i1l2162
  4866  0FCA                     u168_20:	
  4867  0FCA                     i1l2160:	
  4868                           
  4869                           ;isr.c: 15:             {;isr.c: 16:                 sec--;
  4870  0FCA  30FF               	movlw	255
  4871  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  4873  0FCD  07AA               	addwf	_sec,f
  4874  0FCE  1803               	skipnc
  4875  0FCF  0AAB               	incf	_sec+1,f
  4876  0FD0  30FF               	movlw	255
  4877  0FD1  07AB               	addwf	_sec+1,f
  4878                           
  4879                           ;isr.c: 17:             }
  4880  0FD2  2FF4               	goto	i1l2168
  4881  0FD3                     i1l2162:	
  4882  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0FD5  082A               	movf	_sec,w
  4885  0FD6  042B               	iorwf	_sec+1,w
  4886  0FD7  1D03               	btfss	3,2
  4887  0FD8  2FDA               	goto	u169_21
  4888  0FD9  2FDB               	goto	u169_20
  4889  0FDA                     u169_21:	
  4890  0FDA  2FF4               	goto	i1l2168
  4891  0FDB                     u169_20:	
  4892  0FDB                     i1l2164:	
  4893  0FDB  0879               	movf	_min+1,w
  4894  0FDC  3A80               	xorlw	128
  4895  0FDD  00FF               	movwf	btemp+1
  4896  0FDE  3080               	movlw	128
  4897  0FDF  027F               	subwf	btemp+1,w
  4898  0FE0  1D03               	skipz
  4899  0FE1  2FE4               	goto	u170_25
  4900  0FE2  3001               	movlw	1
  4901  0FE3  0278               	subwf	_min,w
  4902  0FE4                     u170_25:	
  4903  0FE4  1C03               	skipc
  4904  0FE5  2FE7               	goto	u170_21
  4905  0FE6  2FE8               	goto	u170_20
  4906  0FE7                     u170_21:	
  4907  0FE7  2FF4               	goto	i1l2168
  4908  0FE8                     u170_20:	
  4909  0FE8                     i1l2166:	
  4910                           
  4911                           ;isr.c: 19:             {;isr.c: 20:                 min--;
  4912  0FE8  30FF               	movlw	255
  4913  0FE9  07F8               	addwf	_min,f
  4914  0FEA  1803               	skipnc
  4915  0FEB  0AF9               	incf	_min+1,f
  4916  0FEC  30FF               	movlw	255
  4917  0FED  07F9               	addwf	_min+1,f
  4918                           
  4919                           ;isr.c: 21:                 sec = 59;
  4920  0FEE  303B               	movlw	59
  4921  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4922  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4923  0FF1  00AA               	movwf	_sec
  4924  0FF2  3000               	movlw	0
  4925  0FF3  00AB               	movwf	_sec+1
  4926  0FF4                     i1l2168:	
  4927                           
  4928                           ;isr.c: 26:         TMR2IF = 0;
  4929  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  4930  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  4931  0FF6  108C               	bcf	12,1	;volatile
  4932  0FF7                     i1l280:	
  4933  0FF7  0872               	movf	??_isr+2,w
  4934  0FF8  00FF               	movwf	btemp+1
  4935  0FF9  0871               	movf	??_isr+1,w
  4936  0FFA  008A               	movwf	10
  4937  0FFB  0E70               	swapf	??_isr^(0+4294967168),w
  4938  0FFC  0083               	movwf	3
  4939  0FFD  0EFE               	swapf	btemp,f
  4940  0FFE  0E7E               	swapf	btemp,w
  4941  0FFF  0009               	retfie
  4942  1000                     __end_of_isr:	
  4943  007E                     btemp	set	126	;btemp
  4944  007E                     wtemp0	set	126
  4945                           
  4946                           	psect	intentry
  4947  0004                     __pintentry:	
  4948                           ;incstack = 0
  4949                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  4950                           
  4951  0004                     interrupt_function:	
  4952  007E                     saved_w	set	btemp
  4953  0004  00FE               	movwf	btemp
  4954  0005  0E03               	swapf	3,w
  4955  0006  00F0               	movwf	??_isr
  4956  0007  080A               	movf	10,w
  4957  0008  00F1               	movwf	??_isr+1
  4958  0009  1283               	bcf	3,5	;RP0=0, select bank0
  4959  000A  1303               	bcf	3,6	;RP1=0, select bank0
  4960  000B  087F               	movf	btemp+1,w
  4961  000C  00F2               	movwf	??_isr+2
  4962  000D  120A  158A  2FA8   	ljmp	_isr


Data Sizes:
    Strings     244
    Constant    0
    Data        1
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     14      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_20(CODE[16]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_15(CODE[10]), STR_14(CODE[13]), STR_13(CODE[10]), STR_12(CODE[3]), 
		 -> STR_11(CODE[3]), min_arr(BANK0[3]), sec_arr(BANK0[3]), STR_10(CODE[17]), 
		 -> STR_9(CODE[12]), STR_8(CODE[17]), STR_7(CODE[9]), STR_6(CODE[14]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_read_matrix_keypad
    _read_matrix_keypad->_scan_keypad
    _power_on_screen->_clcd_putch
    _time_display->___awdiv
    _time_display->___awmod
    _time_display->_clcd_putch
    _time_display->_door_status_check
    _clcd_putch->_clcd_write
    _set_time->___awdiv
    _set_time->___awmod
    _clear_display->_clcd_write
    _clcd_print->_clcd_write
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_power_on_screen
    _power_on_screen->_clcd_print
    _operation_call->_set_time
    _operation_call->_time_display
    _time_display->___awdiv
    _door_status_check->_clcd_print
    _set_time->___awdiv
    _cooking_operations->_clcd_print
    _init_clcd->_init_display_controller

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   52323
                                             10 BANK0      4     4      0
                         _clcd_print
                         _clcd_write
                      _clear_display
                        _init_config
                     _operation_call
                    _power_on_screen
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   3     3      0     203
                                              5 COMMON     3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      7     7      0    7292
                                              3 BANK0      7     7      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _operation_call                                       1     1      0   35320
                                              7 BANK0      1     1      0
                         _clcd_write
                      _clear_display
                 _cooking_operations
                           _set_time
                       _time_display
 ---------------------------------------------------------------------------------
 (2) _time_display                                         3     3      0   17437
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                      _clear_display
                  _door_status_check
 ---------------------------------------------------------------------------------
 (3) _door_status_check                                    1     1      0    6762
                                              7 COMMON     1     1      0
                         _clcd_print
                      _clear_display
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1595
                                              7 COMMON     1     0      1
                                              0 BANK0      1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _set_time                                             3     3      0    9796
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clcd_print
                      _clear_display
 ---------------------------------------------------------------------------------
 (4) _clear_display                                        0     0      0    1263
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1153
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1165
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _cooking_operations                                   3     3      0    5499
                                              3 BANK0      3     3      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    5499
                                              0 BANK0      3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1263
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    1263
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0    1263
                                              0 BANK0      2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1    1263
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_write
   _clear_display
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _operation_call
     _clcd_write
     _clear_display
       _clcd_write
     _cooking_operations
       _clcd_print
         _clcd_write
     _set_time
       ___awdiv
       ___awmod
       ___wmul
       _clcd_print
         _clcd_write
       _clear_display
         _clcd_write
     _time_display
       ___awdiv
       ___awmod
       _clcd_print
         _clcd_write
       _clcd_putch
         _clcd_write
       _clear_display
         _clcd_write
       _door_status_check
         _clcd_print
           _clcd_write
         _clear_display
           _clcd_write
   _power_on_screen
     _clcd_print
       _clcd_write
     _clcd_putch
       _clcd_write
   _read_matrix_keypad
     _scan_keypad

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      E      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Aug 14 23:10:51 2021

                               pc 0002                    clcd_print@addr 0038  __size_of_init_display_controller 0063  
                              l57 0EC8                                l91 070C                                l94 0E65  
                              l97 0FA7                      ___awdiv@sign 0037                                fsr 0004  
             ___wmul@multiplicand 0075                _init_matrix_keypad 0E86                               l110 0360  
                             l210 0608                               l211 0693                               l204 0E95  
                             l108 032A                               l220 063E                               l212 0614  
                             l109 032D                               l221 0638                               l213 060E  
                             l142 03E8                               l145 03F8                               l209 0600  
                             l138 0203                               l234 067E                               l226 0654  
                             l218 062A                               l235 0686                               l227 065C  
                             l219 0632                               l172 0E78                               l228 0668  
                             l181 0F26                               l149 0302                               l237 068C  
                             l229 0662                               l245 07FD                               l166 0F5C  
                             l262 0E85                               l175 0EAA                               l169 07D8  
                             l532 03BB                               l366 0ED9                               l519 0775  
                             l368 0EF3                               _GIE 005F                               _RB0 0030  
                             _RB1 0031                               _RB2 0032                               _RC1 0039  
                             _RB3 0033                               _RC2 003A                               _RD0 0040  
                             _RD1 0041                               _RD2 0042                               _RE1 0049  
                             _RD3 0043                               _RE2 004A                               _PR2 0092  
                             _min 0078                               _sec 002A                               _isr 0FA8  
                  clcd_putch@addr 0077                               fsr0 0004                    clcd_putch@data 0036  
                             indf 0000                      ___awmod@sign 0037               ?_init_matrix_keypad 0070  
                            l2020 07E7                              l2030 07F3                              l2040 07FA  
                            l2016 07DA                              l2042 07FC                              l2026 07E9  
                            l2018 07E2                              l2220 0F28                              l2300 0EED  
                            l2028 07EE                              l2230 0F3E                              l2222 0F32  
                            l2310 0719                              l2038 07F5                              l2232 0F4A  
                            l2224 0F35                              l2320 072A                              l2312 071B  
                            l2304 070D                              l2240 0E5E                              l2400 0218  
                            l2234 0F4B                              l2226 0F36                              l2242 0EF4  
                            l2330 0742                              l2322 0730                              l2314 071F  
                            l2306 0710                              l2250 0E99                              l2410 025A  
                            l2402 022C                              l2236 0F50                              l2228 0F3B  
                            l2244 0EFE                              l2332 0753                              l2324 0733  
                            l2340 0767                              l2316 0724                              l2308 0714  
                            l2500 0131                              l2260 03D9                              l2252 03BC  
                            l2420 02A1                              l2412 0270                              l2404 0240  
                            l2238 0F53                              l2270 0776                              l2246 0F0E  
                            l2342 076C                              l2334 0759                              l2326 073A  
                            l2318 0728                              l2350 0364                              l2502 0137  
                            l2510 0144                              l2262 03EE                              l2254 03C2  
                            l2430 02CF                              l2422 02B0                              l2414 0284  
                            l2406 0241                              l2280 07A8                              l2272 0781  
                            l1720 0E92                              l2248 0F16                              l2344 0771  
                            l2336 075A                              l2328 073E                              l2360 0378  
                            l2352 0368                              l2520 0197                              l2512 015A  
                            l2504 013C                              l2256 03C5                              l2264 03F3  
                            l2440 02F7                              l2432 02D4                              l2424 02BF  
                            l2416 0285                              l2408 024E                              l2600 0323  
                            l2282 07AB                              l2274 0788                              l1722 0E93  
                            l1714 0E86                              l1730 0E81                              l2338 0761  
                            l2370 0390                              l2362 037E                              l2354 036D  
                            l2290 0EC9                              l2530 01C2                              l2522 0198  
                            l2514 016E                              l2506 013F                              l2450 0040  
                            l2266 03F6                              l2258 03CA                              l2442 02FC  
                            l2434 02E3                              l2426 02C5                              l2418 0292  
                            l2602 032F                              l2610 035A                              l2284 07B2  
                            l2276 079A                              l1724 0E94                              l1716 0E8E  
                            l1732 0E82                              l2380 03B2                              l2372 039A  
                            l2364 0381                              l2356 036F                              l2348 0361  
                            l2292 0ECD                              l2524 01A5                              l2532 01D1  
                            l2516 016F                              l2508 0140                              l2460 0055  
                            l2452 0042                              l2444 002B                              l2268 03F7  
                            l2436 02E6                              l2428 02CD                              l2604 0334  
                            l1900 060C                              l2620 04F9                              l2286 07C0  
                            l2278 07A1                              l2390 0E72                              l1718 0E8F  
                            l1726 0E79                              l2550 0EBA                              l2382 03B7  
                            l2374 03A0                              l2366 0388                              l2358 0373  
                            l2294 0ED1                              l2542 01F6                              l2526 01A7  
                            l2518 0183                              l2470 0086                              l2462 0064  
                            l2454 0044                              l2446 0038                              l2438 02F4  
                            l1910 0618                              l2630 051C                              l2622 04FE  
                            l2288 07CA                              l2392 0E73                              l1728 0E7D  
                            l2560 0EC7                              l2552 0EBD                              l2376 03A7  
                            l2368 038C                              l2296 0EE0                              l2536 01DA  
                            l2528 01B5                              l2480 00C4                              l2472 008C  
                            l2456 0046                              l2448 003E                              l2464 0073  
                            l2608 033B                              l1920 0636                              l1912 061C  
                            l2640 0536                              l2632 051D                              l2624 0503  
                            l2386 0E6E                              l2554 0EC0                              l2394 0F5D  
                            l2378 03AD                              l2298 0EE7                              l2538 01E8  
                            l2490 0103                              l2482 00D3                              l2474 0099  
                            l2466 007A                              l2458 0048                              l2570 06A5  
                            l2562 0694                              l1930 0642                              l1914 0630  
                            l1906 0612                              l2642 0545                              l2634 0522  
                            l2626 0509                              l2618 04F4                              l2388 0E71  
                            l2556 0EC3                              l2548 0EAB                              l2396 0F99  
                            l2492 010A                              l2484 00EA                              l2476 00B2  
                            l2468 0080                              l2572 06AD                              l1940 0660  
                            l1932 0646                              l2660 057F                              l2652 0568  
                            l2644 0553                              l2636 052A                              l2628 0514  
                            l2558 0EC6                              l2494 0119                              l2478 00B5  
                            l2486 00EE                              l2398 0204                              l2590 0306  
                            l2582 06DC                              l2574 06BA                              l1950 066C  
                            l1934 065A                              l1926 063C                              l2662 0581  
                            l2670 058C                              l2654 056E                              l2638 0531  
                            l2646 0559                              l2496 0128                              l2488 00F6  
                            l2592 0307                              l2584 06E9                              l2576 06D8  
                            l2568 0698                              l1960 068A                              l1952 0670  
                            l2672 0593                              l2680 05B9                              l2664 0585  
                            l2656 0573                              l2648 055F                              l2498 012A  
                            l2746 0340                              l2594 030D                              l2586 06F1  
                            l1970 0692                              l1954 0684                              l1946 0666  
                            l1890 05EE                              l2690 05D2                              l2682 05C0  
                            l2674 059B                              l2666 0586                              l2658 0579  
                            l2748 01FB                              l2596 0313                              l2588 06FE  
                            l1892 05F2                              l2692 05D8                              l2684 05C2  
                            l2676 05A8                              l2668 0587                              l2598 031A  
                            l1966 0690                              l1894 0606                              l2678 05AE  
                            l2686 05C7                              l2694 05DC                              l1888 05E8  
                            l2688 05CD                              ?_isr 0070                              STR_1 0491  
                            STR_2 04B7                              STR_3 0474                              STR_4 04E0  
                            STR_5 04D7                              STR_6 0483                              STR_7 04E9  
                            STR_8 0442                              STR_9 04AB                              u2000 02C5  
                            u2001 02C4                              u2010 02CD                              u2011 02CC  
                            u2100 0103                              u2020 0038                              u2101 0102  
                            u2021 0037                              u2110 0119                              u2030 007A  
                            u2111 0118                              u2031 0079                              u2120 0128  
                            u2040 0080                              u1400 063C                              u2200 051B  
                            u2121 0127                              u2105 00FF                              u2041 007F  
                            u2025 0034                              u1401 063B                              u2201 051A  
                            u2130 0137                              u2050 0086                              u1410 0654  
                            u1330 0600                              u2210 0522                              u2131 0136  
                            u2115 0115                              u2051 0085                              u1411 0653  
                            u1331 05FF                              u2211 0521                              u2140 01A5  
                            u2060 0099                              u1420 065A                              u1340 0606  
                            u2300 05D8                              u2220 055F                              u2141 01A4  
                            u2125 0124                              u2061 0098                              u1421 0659  
                            u1341 0605                              u2301 05D7                              u2221 055E  
                            u2150 01AE                              u2070 00C4                              u1430 0660  
                            u1350 060C                              u1510 07E7                              u2230 056E  
                            u2151 01AC                              u2071 00C3                              u1431 065F  
                            u1351 060B                              u1511 07E6                              u2231 056D  
                            u2160 01AF                              u2080 00D3                              u1440 0666  
                            u1360 0612                              u1520 07EE                              u2240 0579  
                            u2081 00D2                              u2065 0095                              u1441 0665  
                            u1361 0611                              u1521 07ED                              u2241 0578  
                            u2170 01D9                              u2090 00F6                              u1450 067E  
                            u1370 062A                              u1530 07F3                              u2250 057F  
                            u2171 01D8                              u2091 00F5                              u2075 00C0  
                            u1451 067D                              u1371 0629                              u1531 07F2  
                            u2251 057E                              u2180 06BA                              u1460 0684  
                            u1380 0630                              u1540 07FA                              u2260 0593  
                            u2085 00CF                              u2181 06B9                              u1461 0683  
                            u1381 062F                              u1541 07F9                              u2261 0592  
                            u2317 054D                              u1710 0F2F                              u2190 06FE  
                            u1470 068A                              u1390 0636                              u2270 05A8  
                            u1711 0F2B                              u2407 07D5                              u2327 0706  
                            u2191 06FD                              u1471 0689                              u1391 0635  
                            u2271 05A7                              u1800 0EED                              u1480 0690  
                            u2280 05C0                              u2417 0F38                              u1801 0EEC  
                            u2337 02EE                              u2185 06B6                              u1481 068F  
                            u2281 05BF                              u1810 0714                              u2290 05CD  
                            u2427 0F4D                              u2347 0FA1                              u1811 0713  
                            u2195 06FA                              u2291 05CC                              u2275 05A4  
                            u1724 0F32                              u1740 0F26                              u1900 076C  
                            u1820 071F                              u2437 0F57                              u2357 077C  
                            u1741 0F25                              u1901 076B                              u1821 071E  
                            u1830 0730                              u1910 0368                              u1750 03C2  
                            u1735 0F42                              u2367 078E                              u1831 072F  
                            u1911 0367                              u1751 03C1                              u1920 0373  
                            u1760 03EE                              u2377 079E                              u1921 0372  
                            u1761 03ED                              u1850 0742                              u1930 037E  
                            u1770 0ED1                              u2387 07B6                              u1851 0741  
                            u1931 037D                              u1771 0ED0                              u2397 07C6  
                            u1845 0734                              u1870 0753                              u1950 0390  
                            u1871 0752                              u1951 038F                              u1960 039A  
                            u1865 0743                              u1961 0399                              u1945 0382  
                            u1785 0EDA                              u1890 0767                              u1891 0766  
                            u1875 074F                              u1795 0EE1                              _PEIE 005E  
                            u1980 03AD                              u1885 075B                              u1981 03AC  
                            u1965 0396                              u1990 03B2                              u1991 03B1  
                            u1975 03A1                              _main 04F4                              btemp 007E  
                            start 0010              ??_init_matrix_keypad 0073                    clcd_write@byte 0076  
                  clcd_write@mode 0073        __size_of_door_status_check 003D           __end_of_power_on_screen 070D  
                           ??_isr 0070                             ?_main 0070                   __end_of___awdiv 0776  
                           STR_10 0453                             STR_11 0413                             STR_12 0413  
                           STR_20 0464                             STR_13 04CD                             STR_14 049E  
                           STR_15 04C3                             STR_16 04F2                             STR_17 042C  
                   __CFG_WDTE$OFF 0000                             STR_18 0416                             STR_19 0400  
                 __end_of___awmod 03BC                   ___awdiv@divisor 0073                             i1l280 0FF7  
                    ?_init_config 0070                   ___awdiv@counter 0036                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088                      ?_init_timer2 0070  
                           _nRBPU 040F                _read_matrix_keypad 07D9                             pclath 000A  
             ?_read_matrix_keypad 0070                             status 0003                             wtemp0 007E  
                    ?_scan_keypad 0070                   __initialization 0013                      __end_of_main 05E8  
            ??_read_matrix_keypad 0075                            ??_main 0040                _cooking_operations 0F5D  
                ___awdiv@dividend 0075                            i1l2160 0FCA                            i1l2152 0FA8  
                          i1l2162 0FD3                            i1l2154 0FAC                            i1l2164 0FDB  
                          i1l2156 0FBB                            i1l2166 0FE8                            i1l2158 0FBD  
                          i1l2168 0FF4                            u170_20 0FE8                            u170_21 0FE7  
                          u170_25 0FE4                            u166_20 0FAC                            u166_21 0FAB  
                          u167_20 0FBB                            u167_21 0FBA                            u168_20 0FCA  
                          u168_21 0FC9                            u168_25 0FC6                            u169_20 0FDB  
                          u169_21 0FDA               ?_cooking_operations 0070                            _TMR2IE 0461  
                          _TMR2IF 0061                            _TMR2ON 0092                            _TRISC1 0439  
                          _TRISC2 043A                            _TRISE1 0449                            _TRISE2 044A  
           __end_of_clear_display 0E66           _init_display_controller 0776                            ___wmul 0EC9  
                       ??___awdiv 0077                  ?_power_on_screen 0070                         ??___awmod 0077  
            ??_cooking_operations 0039                  ___awdiv@quotient 0038                   ___awmod@divisor 0073  
                 ___awmod@counter 0036                      __pdataCOMMON 007A                  __end_of_set_time 0204  
                          saved_w 007E           __end_of__initialization 0024           __size_of_operation_call 005E  
                  __pcstackCOMMON 0070              __size_of_init_config 001E              __size_of_init_timer2 000D  
                      __pbssBANK0 0020                __size_of_init_clcd 000B         ??_init_display_controller 0036  
                      _clcd_print 0EF4                        _clcd_putch 0E96                        _clcd_write 0F27  
            __size_of_scan_keypad 00AC                        __pmaintext 04F4                           ?___wmul 0073  
                      __pintentry 0004                           _T2CKPS0 0090                           _T2CKPS1 0091  
                      __stringtab 0800                         ?_set_time 0070       __size_of_init_matrix_keypad 0010  
                         ___awdiv 070D                           ___awmod 0361                   __size_of___wmul 002B  
                         __ptext1 07D9                           __ptext2 05E8                           __ptext3 0694  
                         __ptext4 0303                           __ptext5 0204                           __ptext6 03BC  
                         __ptext7 0E96                           __ptext8 0028                           __ptext9 0E5E  
 __end_of_init_display_controller 07D9                 __end_of_init_clcd 0E79                      __size_of_isr 0058  
                         _min_arr 0033                           _sec_arr 0030                  ___awmod@dividend 0075  
                   ?_time_display 0070                           main@key 0043                           clrloop0 0E67  
            end_of_initialization 0024                       set_time@key 003C                    _operation_call 0303  
                  _operation_mode 002E                       ?_clcd_print 0036                       ?_clcd_putch 0077  
                     ?_clcd_write 0073                        _reset_flag 002C                        ??_set_time 003A  
                    __pstringtext 0400       __size_of_read_matrix_keypad 0025                    ??_time_display 003A  
                   clcd_print@str 0036            __end_of_operation_call 0361                    __end_of___wmul 0EF4  
                   __pidataCOMMON 07FE       __size_of_cooking_operations 004B          __size_of_power_on_screen 0079  
          __size_of_clear_display 0008               start_initialization 0013               __size_of_clcd_print 0033  
                    scan_keypad@i 0073               __size_of_clcd_putch 0015               __size_of_clcd_write 0036  
          read_matrix_keypad@mode 0076            read_matrix_keypad@once 007A                       __end_of_isr 1000  
              set_time@blink_posi 0024                   ?_operation_call 0070                          ??___wmul 0077  
               operation_call@key 003D                     ??_init_config 0077                     ??_init_timer2 0073  
                     __pbssCOMMON 0078                         ___latbits 0002                     __pcstackBANK0 0036  
                   ??_scan_keypad 0073                     _clear_display 0E5E              power_on_screen@i_112 003E  
            __end_of_time_display 0303                          ?___awdiv 0073                          ?___awmod 0073  
               __size_of_set_time 01DC                         __pstrings 0800                         _init_clcd 0E6E  
             __end_of_init_config 0EC9                 ??_power_on_screen 0039               __end_of_init_timer2 0E86  
        ?_init_display_controller 0070                 interrupt_function 0004                    ___wmul@product 0036  
                  ?_clear_display 0070                         clear_ram0 0E66                      ??_clcd_print 0077  
                    ??_clcd_putch 0078        __end_of_init_matrix_keypad 0E96                      ??_clcd_write 0074  
             __end_of_scan_keypad 0694                       __stringbase 0812                 ___wmul@multiplier 0073  
              __end_of_clcd_print 0F27                __end_of_clcd_putch 0EAB                __end_of_clcd_write 0F5D  
                      ?_init_clcd 0070             read_matrix_keypad@key 0077                     set_time@blink 0028  
      __end_of_read_matrix_keypad 07FE                  __size_of___awdiv 0069                  __size_of___awmod 005B  
              __end_of__stringtab 0812                 set_time@key_count 0022                       _init_config 0EAB  
                     _init_timer2 0E79                  ??_operation_call 0078                          __ptext10 0EC9  
                        __ptext11 0361                          __ptext20 0F27                          __ptext12 070D  
                        __ptext21 0FA8                          __ptext13 0F5D                          __ptext14 0EF4  
                        __ptext15 0EAB                          __ptext16 0E79                          __ptext17 0E86  
                        __ptext18 0E6E                          __ptext19 0776                   ??_clear_display 0077  
                   __size_of_main 00F4                       _scan_keypad 05E8             __size_of_time_display 00FF  
                        _set_time 0028        __end_of_cooking_operations 0FA8                 _door_status_check 03BC  
              ?_door_status_check 0070                          isr@count 0020                      set_time@wait 0026  
             ??_door_status_check 0077                       ??_init_clcd 0077                      _time_display 0204  
                        intlevel1 0000                         stringcode 080A         __end_of_door_status_check 03F9  
                 _power_on_screen 0694                          stringtab 0800                  power_on_screen@i 003C  
